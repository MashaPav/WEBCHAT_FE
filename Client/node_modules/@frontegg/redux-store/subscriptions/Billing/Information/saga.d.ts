import { IPlanResponse, ISubscriptionResponse, ISubscriptionSummariesResponse } from '@frontegg/rest-api';
import { PaymentProvider } from '../../general.interfaces';
export declare function subscriptionBillingInformationSagas(): Generator<import("redux-saga/effects").ForkEffect<never>, void, unknown>;
export declare function loadBillingInformation(): Generator<Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").PutEffect<{
    payload: string | null;
    type: string;
}> | Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").PutEffect<{
    payload: string | null;
    type: string;
}> | import("redux-saga/effects").PutEffect<{
    payload: boolean;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISubscriptionSummariesResponse> | Generator<import("redux-saga/effects").PutEffect<{
    payload: string | null;
    type: string;
}> | import("redux-saga/effects").PutEffect<{
    payload: boolean;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISubscriptionResponse[]> | import("redux-saga/effects").PutEffect<{
    payload: Partial<import("../Subscription/interfaces").SubscriptionState>;
    type: string;
}>, void, [any]> | import("redux-saga/effects").CallEffect<IPlanResponse[]> | import("redux-saga/effects").AllEffect<any> | import("redux-saga/effects").PutEffect<{
    payload: Partial<import("./interfaces").BillingInformationState>;
    type: string;
}>, void, any>, void, PaymentProvider>, void, unknown>;
export declare function loadSummaries(tenantId: string, forceActive?: boolean): Generator<import("redux-saga/effects").SelectEffect | import("redux-saga/effects").PutEffect<{
    payload: string | null;
    type: string;
}> | import("redux-saga/effects").PutEffect<{
    payload: boolean;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISubscriptionSummariesResponse> | Generator<import("redux-saga/effects").PutEffect<{
    payload: string | null;
    type: string;
}> | import("redux-saga/effects").PutEffect<{
    payload: boolean;
    type: string;
}> | import("redux-saga/effects").CallEffect<ISubscriptionResponse[]> | import("redux-saga/effects").PutEffect<{
    payload: Partial<import("../Subscription/interfaces").SubscriptionState>;
    type: string;
}>, void, [any]> | import("redux-saga/effects").CallEffect<IPlanResponse[]> | import("redux-saga/effects").AllEffect<any> | import("redux-saga/effects").PutEffect<{
    payload: Partial<import("./interfaces").BillingInformationState>;
    type: string;
}>, void, any>;
export declare function loadSummariesMock(): Generator<import("redux-saga/effects").PutEffect<{
    payload: boolean;
    type: string;
}> | import("redux-saga/effects").PutEffect<{
    payload: Partial<import("./interfaces").BillingInformationState>;
    type: string;
}> | import("redux-saga/effects").CallEffect<true>, void, unknown>;
export declare function subscriptionBillingInformationSagasMock(): Generator<import("redux-saga/effects").ForkEffect<never>, void, unknown>;
