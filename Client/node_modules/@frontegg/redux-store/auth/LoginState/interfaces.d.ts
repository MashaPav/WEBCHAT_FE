import { AuthStrategyEnum, IPasswordlessPostLogin, ITenantsResponse, IVerifyNewWebAuthnDevice, IWebAuthnPostLogin } from '@frontegg/rest-api';
import { WithCallback } from '../../interfaces';
import { CustomEventsOptions } from '../interfaces';
export declare enum LoginStep {
    'preLogin' = "preLogin",
    'magicLinkPreLoginSuccess' = "magicLinkPreLoginSuccess",
    'loginWithSmsOtc' = "loginWithSmsOtc",
    'loginWithQuickSmsOtc' = "loginWithQuickSmsOtc",
    'loginWithOtc' = "loginWithOtc",
    'loginWithPassword' = "loginWithPassword",
    'loginWithTwoFactor' = "loginWithTwoFactor",
    'redirectToSSO' = "redirectToSSO",
    'loginWithSSOFailed' = "loginWithSSOFailed",
    'success' = "success",
    'forceTwoFactor' = "forceTwoFactor",
    'recoverTwoFactor' = "recoverTwoFactor"
}
export declare enum LoginFlow {
    Login = "login",
    RegisterQuickLogin = "registerQuickLogin"
}
export declare enum QuickLoginStrategy {
    Internal = "internal",
    UsbKey = "usb-key",
    Android = "android",
    Sms = "sms"
}
export interface LoginState {
    loading: boolean;
    error?: any;
    step: LoginStep;
    flow: LoginFlow;
    ssoRedirectUrl?: string;
    mfaRequired?: boolean;
    mfaToken?: string;
    email?: string;
    tenants: ITenantsResponse[];
    tenantsLoading?: boolean;
    allowRememberMfaDevice?: boolean;
    mfaDeviceExpiration?: number;
    inviteTokenTenantName?: string;
    inviteTokenError?: string;
    isNewUser?: boolean;
    phoneNumber?: string;
    quickLoginToRegister?: QuickLoginStrategy;
    changePhoneId?: string;
}
export interface HostedLoginCallback {
    code: string;
    state?: string;
    nonce?: string;
}
export interface IQuickSmsPasswordlessPreLoginPayload {
    email: string;
    recaptchaToken?: string;
    invitationToken?: string;
}
export interface IPasswordlessPostLoginPayload extends IPasswordlessPostLogin {
    events?: CustomEventsOptions;
}
export declare type IWebAuthnPostLoginPayload = WithCallback<Omit<IWebAuthnPostLogin, 'response' | 'id'>> & {
    publicKey: Credential;
};
export declare type IVerifyNewWebAuthnDevicePayload = WithCallback<Omit<IVerifyNewWebAuthnDevice, 'response' | 'id'>> & {
    publicKey: Credential;
};
export { AuthStrategyEnum };
