import { authActions } from '@frontegg/redux-store';
import { AppHolder } from './AppHolder.js';
import { ContextHolder } from '@frontegg/rest-api';

class HostedLogin {
    static setAuthentication(isAuthenticated, accessToken, user, appName = 'default') {
        const app = AppHolder.getInstance(appName);
        if (isAuthenticated && accessToken) {
            ContextHolder.setAccessToken(accessToken);
            ContextHolder.setUser(Object.assign(Object.assign({}, user), { accessToken }));
            app.store.dispatch(authActions.setState({
                isLoading: false,
                isAuthenticated,
                user,
            }));
            app.store.dispatch(authActions.loadTenants());
        }
        else {
            ContextHolder.setAccessToken(null);
            ContextHolder.setUser(null);
            app.store.dispatch(authActions.setState({
                isLoading: false,
                isAuthenticated: false,
                user: null,
            }));
        }
    }
}

export { HostedLogin };
