'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var reduxStore = require('@frontegg/redux-store');
var AppHolder = require('./AppHolder.js');
var restApi = require('@frontegg/rest-api');

class HostedLogin {
    static setAuthentication(isAuthenticated, accessToken, user, appName = 'default') {
        const app = AppHolder.AppHolder.getInstance(appName);
        if (isAuthenticated && accessToken) {
            restApi.ContextHolder.setAccessToken(accessToken);
            restApi.ContextHolder.setUser(Object.assign(Object.assign({}, user), { accessToken }));
            app.store.dispatch(reduxStore.authActions.setState({
                isLoading: false,
                isAuthenticated,
                user,
            }));
            app.store.dispatch(reduxStore.authActions.loadTenants());
        }
        else {
            restApi.ContextHolder.setAccessToken(null);
            restApi.ContextHolder.setUser(null);
            app.store.dispatch(reduxStore.authActions.setState({
                isLoading: false,
                isAuthenticated: false,
                user: null,
            }));
        }
    }
}

exports.HostedLogin = HostedLogin;
