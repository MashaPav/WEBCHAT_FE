import { EnhancedStore } from '@reduxjs/toolkit';
import { FronteggAppOptions, FronteggCheckoutDialogOptions, LocalizationsOverrides } from '@frontegg/types';
declare type FronteggAppContainers = {
    adminPortalEl: HTMLElement;
    loginBoxEl: HTMLElement;
    checkoutDialogEl: HTMLElement;
    adminPortalContainer: HTMLElement;
    loginBoxContainer: HTMLElement;
    checkoutDialogContainer: HTMLElement;
};
export declare class FronteggApp {
    readonly name: string;
    readonly iframeRendering: boolean;
    options: FronteggAppOptions;
    loading: boolean;
    customElementName: string;
    adminPortalEl?: HTMLElement;
    loginBoxEl?: HTMLElement;
    checkoutDialogEl?: HTMLElement;
    adminPortalContainer?: HTMLElement;
    loginBoxContainer?: HTMLElement;
    checkoutDialogContainer?: HTMLElement;
    store: EnhancedStore;
    loadingListeners: (() => void)[];
    updateLocalizations?: (localizations: LocalizationsOverrides) => void;
    constructor(_options: FronteggAppOptions, name: string, iframeRendering?: boolean);
    loadAdminBoxMetadata: () => Promise<void>;
    requestAuthorize: () => Promise<void>;
    initContainers(elements: FronteggAppContainers): Promise<void>;
    updateLocalizationsSetter: (localizationUpdateFn: (localizations: LocalizationsOverrides) => void) => void;
    updateMetadata(metadata: FronteggAppOptions['metadata']): void;
    addOnLoadedListener(listener: () => void): void;
    showAdminPortal(): void;
    hideAdminPortal(): void;
    showCheckoutDialog(opts: FronteggCheckoutDialogOptions): void;
    hideCheckoutDialog(): void;
    close(): void;
}
export {};
