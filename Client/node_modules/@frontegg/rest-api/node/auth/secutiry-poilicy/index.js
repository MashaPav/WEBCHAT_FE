"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCaptchaPolicy = getCaptchaPolicy;
exports.getGlobalSecurityPolicy = getGlobalSecurityPolicy;
exports.getLockoutPolicy = getLockoutPolicy;
exports.getMfaPolicy = getMfaPolicy;
exports.getPasswordConfigPolicy = getPasswordConfigPolicy;
exports.getPasswordHistoryPolicy = getPasswordHistoryPolicy;
exports.getVendorMfaPolicy = getVendorMfaPolicy;
exports.saveLockoutPolicy = saveLockoutPolicy;
exports.saveMfaPolicy = saveMfaPolicy;
exports.savePasswordHistoryPolicy = savePasswordHistoryPolicy;

var _fetch = require("../../fetch");

var _constants = require("../../constants");

async function getGlobalSecurityPolicy() {
  return (0, _fetch.Get)(_constants.urls.identity.configurations.v1);
}

async function getMfaPolicy() {
  return (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/mfa-policy`);
}

async function getVendorMfaPolicy() {
  return (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/mfa-policy/vendor`);
}

async function saveMfaPolicy(body) {
  if (body.id) {
    return (0, _fetch.Patch)(`${_constants.urls.identity.configurations.v1}/mfa-policy`, body);
  } else {
    return (0, _fetch.Post)(`${_constants.urls.identity.configurations.v1}/mfa-policy`, body);
  }
}

async function getLockoutPolicy() {
  return (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/lockout-policy`);
}

async function saveLockoutPolicy(body) {
  if (body.id) {
    return (0, _fetch.Patch)(`${_constants.urls.identity.configurations.v1}/lockout-policy`, body);
  } else {
    return (0, _fetch.Post)(`${_constants.urls.identity.configurations.v1}/lockout-policy`, body);
  }
}

async function getCaptchaPolicy() {
  try {
    return await (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/captcha-policy/public`);
  } catch {
    return null;
  }
}

async function getPasswordHistoryPolicy() {
  return (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/password-history-policy`);
}

async function savePasswordHistoryPolicy(body) {
  if (body.id) {
    return (0, _fetch.Patch)(`${_constants.urls.identity.configurations.v1}/password-history-policy`, body);
  } else {
    return (0, _fetch.Post)(`${_constants.urls.identity.configurations.v1}/password-history-policy`, body);
  }
}

async function getPasswordConfigPolicy() {
  return (0, _fetch.Get)(`${_constants.urls.identity.configurations.v1}/password`);
}