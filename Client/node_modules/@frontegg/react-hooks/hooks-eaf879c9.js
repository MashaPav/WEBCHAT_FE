import { useMemo } from 'react';
import { vendorStoreName, bindActionCreators, vendorActions } from '@frontegg/redux-store';
import { shallowEqual } from 'react-redux';
import { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';

const useVendorState = (stateMapper) => {
    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[vendorStoreName])) !== null && _a !== void 0 ? _a : state[vendorStoreName]; }, shallowEqual);
};
const useVendorActions = () => {
    const dispatch = useDispatch();
    return useMemo(() => bindActionCreators(vendorActions, dispatch), [vendorActions]);
};

export { useVendorState as a, useVendorActions as u };
