import { useMemo } from 'react';
import { shallowEqual } from 'react-redux';
import { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';
import { connectivityStoreName, bindActionCreators, connectivityActions } from '@frontegg/redux-store';

const useConnectivityState = (stateMapper) => {
    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[connectivityStoreName])) !== null && _a !== void 0 ? _a : state[connectivityStoreName]; }, shallowEqual);
};
const useConnectivityActions = () => {
    const dispatch = useDispatch();
    return useMemo(() => bindActionCreators(connectivityActions, dispatch), [connectivityActions]);
};

export { useConnectivityState as a, useConnectivityActions as u };
