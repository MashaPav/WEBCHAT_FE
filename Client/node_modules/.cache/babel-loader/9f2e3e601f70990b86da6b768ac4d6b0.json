{"ast":null,"code":"import { Get } from '../fetch';\n\nasync function getMetadata(body) {\n  var _data$rows, _data$rows2;\n\n  const data = await Get('/metadata', body);\n  if (data != null && (_data$rows = data.rows) != null && _data$rows[0]) return data == null ? void 0 : (_data$rows2 = data.rows) == null ? void 0 : _data$rows2[0];\n  throw new Error(`metadata not found: ${body.entityName}`);\n}\n\nasync function getIpMetadata(ip) {\n  const data = await Get(`/metadata/ip/${ip}`);\n  if (data) return data;\n  throw new Error(`ip metadata not found`);\n}\n\nexport const getNotificationsMetadata = async () => getMetadata({\n  entityName: 'notifications'\n});\nexport const getSamlMetadata = async () => getMetadata({\n  entityName: 'saml'\n});\nexport const getAuditsMetadata = async () => getMetadata({\n  entityName: 'audits'\n});\nexport const getIpAdressMetadata = async ip => getIpMetadata(ip);","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/metadata/index.js"],"names":["Get","getMetadata","body","_data$rows","_data$rows2","data","rows","Error","entityName","getIpMetadata","ip","getNotificationsMetadata","getSamlMetadata","getAuditsMetadata","getIpAdressMetadata"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;;AAEA,eAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,UAAJ,EAAgBC,WAAhB;;AAEA,QAAMC,IAAI,GAAG,MAAML,GAAG,CAAC,WAAD,EAAcE,IAAd,CAAtB;AACA,MAAIG,IAAI,IAAI,IAAR,IAAgB,CAACF,UAAU,GAAGE,IAAI,CAACC,IAAnB,KAA4B,IAA5C,IAAoDH,UAAU,CAAC,CAAD,CAAlE,EAAuE,OAAOE,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwB,CAACD,WAAW,GAAGC,IAAI,CAACC,IAApB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CF,WAAW,CAAC,CAAD,CAAvF;AACvE,QAAM,IAAIG,KAAJ,CAAW,uBAAsBL,IAAI,CAACM,UAAW,EAAjD,CAAN;AACD;;AAED,eAAeC,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,QAAML,IAAI,GAAG,MAAML,GAAG,CAAE,gBAAeU,EAAG,EAApB,CAAtB;AACA,MAAIL,IAAJ,EAAU,OAAOA,IAAP;AACV,QAAM,IAAIE,KAAJ,CAAW,uBAAX,CAAN;AACD;;AAED,OAAO,MAAMI,wBAAwB,GAAG,YAAYV,WAAW,CAAC;AAC9DO,EAAAA,UAAU,EAAE;AADkD,CAAD,CAAxD;AAGP,OAAO,MAAMI,eAAe,GAAG,YAAYX,WAAW,CAAC;AACrDO,EAAAA,UAAU,EAAE;AADyC,CAAD,CAA/C;AAGP,OAAO,MAAMK,iBAAiB,GAAG,YAAYZ,WAAW,CAAC;AACvDO,EAAAA,UAAU,EAAE;AAD2C,CAAD,CAAjD;AAGP,OAAO,MAAMM,mBAAmB,GAAG,MAAMJ,EAAN,IAAYD,aAAa,CAACC,EAAD,CAArD","sourcesContent":["import { Get } from '../fetch';\n\nasync function getMetadata(body) {\n  var _data$rows, _data$rows2;\n\n  const data = await Get('/metadata', body);\n  if (data != null && (_data$rows = data.rows) != null && _data$rows[0]) return data == null ? void 0 : (_data$rows2 = data.rows) == null ? void 0 : _data$rows2[0];\n  throw new Error(`metadata not found: ${body.entityName}`);\n}\n\nasync function getIpMetadata(ip) {\n  const data = await Get(`/metadata/ip/${ip}`);\n  if (data) return data;\n  throw new Error(`ip metadata not found`);\n}\n\nexport const getNotificationsMetadata = async () => getMetadata({\n  entityName: 'notifications'\n});\nexport const getSamlMetadata = async () => getMetadata({\n  entityName: 'saml'\n});\nexport const getAuditsMetadata = async () => getMetadata({\n  entityName: 'audits'\n});\nexport const getIpAdressMetadata = async ip => getIpMetadata(ip);"]},"metadata":{},"sourceType":"module"}