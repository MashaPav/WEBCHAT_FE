{"ast":null,"code":"import { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { connectivityStoreName, bindActionCreators, connectivityActions } from '@frontegg/redux-store';\n\nconst useConnectivityState = stateMapper => {\n  return useSelector(state => {\n    var _a;\n\n    return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[connectivityStoreName])) !== null && _a !== void 0 ? _a : state[connectivityStoreName];\n  }, shallowEqual);\n};\n\nconst useConnectivityActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(connectivityActions, dispatch), [connectivityActions]);\n};\n\nexport { useConnectivityState as a, useConnectivityActions as u };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/react-hooks/hooks-6400e233.js"],"names":["useMemo","shallowEqual","u","useSelector","a","useDispatch","connectivityStoreName","bindActionCreators","connectivityActions","useConnectivityState","stateMapper","state","_a","useConnectivityActions","dispatch"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,CAAC,IAAIC,WAAd,EAA2BC,CAAC,IAAIC,WAAhC,QAAmD,oCAAnD;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,mBAApD,QAA+E,uBAA/E;;AAEA,MAAMC,oBAAoB,GAAIC,WAAD,IAAiB;AAC1C,SAAOP,WAAW,CAAEQ,KAAD,IAAW;AAAE,QAAIC,EAAJ;;AAAQ,WAAO,CAACA,EAAE,GAAGF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACC,KAAK,CAACL,qBAAD,CAAN,CAA3E,MAA+G,IAA/G,IAAuHM,EAAE,KAAK,KAAK,CAAnI,GAAuIA,EAAvI,GAA4ID,KAAK,CAACL,qBAAD,CAAxJ;AAAkL,GAAxM,EAA0ML,YAA1M,CAAlB;AACH,CAFD;;AAGA,MAAMY,sBAAsB,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,SAAOL,OAAO,CAAC,MAAMO,kBAAkB,CAACC,mBAAD,EAAsBM,QAAtB,CAAzB,EAA0D,CAACN,mBAAD,CAA1D,CAAd;AACH,CAHD;;AAKA,SAASC,oBAAoB,IAAIL,CAAjC,EAAoCS,sBAAsB,IAAIX,CAA9D","sourcesContent":["import { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { connectivityStoreName, bindActionCreators, connectivityActions } from '@frontegg/redux-store';\n\nconst useConnectivityState = (stateMapper) => {\r\n    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[connectivityStoreName])) !== null && _a !== void 0 ? _a : state[connectivityStoreName]; }, shallowEqual);\r\n};\r\nconst useConnectivityActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(connectivityActions, dispatch), [connectivityActions]);\r\n};\n\nexport { useConnectivityState as a, useConnectivityActions as u };\n"]},"metadata":{},"sourceType":"module"}