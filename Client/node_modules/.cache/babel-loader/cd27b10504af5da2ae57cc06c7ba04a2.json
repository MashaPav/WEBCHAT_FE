{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"type\"],\n      _excluded2 = [\"type\"];\nimport { getTenants } from \"../tenants\";\nexport * from './secutiry-poilicy';\nexport * from './enums';\nimport { urls } from '../constants';\nimport { ContextHolder } from '../ContextHolder';\nimport { Delete, Get, Patch, Post, Put } from '../fetch';\nimport { jwtDecode } from '../jwt';\nexport async function generateLoginResponse(loginResponse) {\n  if (!loginResponse.accessToken) {\n    return loginResponse;\n  }\n\n  ContextHolder.setAccessToken(loginResponse.accessToken);\n  const me = await Get(`${urls.identity.users.v2}/me`);\n  const decodedContent = loginResponse.accessToken ? jwtDecode(loginResponse.accessToken) : {};\n\n  const user = _extends({}, loginResponse, decodedContent, me);\n\n  ContextHolder.setUser(user);\n  return user;\n}\nexport async function generateLoginResponseV2(loginResponse) {\n  if (!loginResponse.accessToken) {\n    return {\n      user: loginResponse\n    };\n  }\n\n  ContextHolder.setAccessToken(loginResponse.accessToken);\n  const [me, tenants] = await Promise.all([Get(`${urls.identity.users.v2}/me`), getTenants()]);\n  const decodedContent = loginResponse.accessToken ? jwtDecode(loginResponse.accessToken) : {};\n\n  const user = _extends({}, loginResponse, decodedContent, me);\n\n  ContextHolder.setUser(user);\n  return {\n    user,\n    tenants\n  };\n}\nexport async function generateLoginResponseFromOAuthResponse(oauthResponse) {\n  ContextHolder.setAccessToken(oauthResponse.id_token);\n  const me = await Get(`${urls.identity.users.v2}/me`);\n  const decodedContent = oauthResponse.id_token ? jwtDecode(oauthResponse.id_token) : {};\n\n  const user = _extends({\n    mfaRequired: false,\n    accessToken: oauthResponse.id_token,\n    refreshToken: oauthResponse.refresh_token\n  }, decodedContent, me, {\n    expiresIn: decodedContent.exp ? Math.ceil(decodedContent.exp - new Date().getTime() / 1000) : 300\n  });\n\n  ContextHolder.setUser(user);\n  return user;\n}\nexport async function preLogin(body) {\n  try {\n    const {\n      address\n    } = await Post(`${urls.identity.auth.v1}/user/saml/prelogin`, body);\n    return address;\n  } catch {\n    return null;\n  }\n}\nexport async function preLoginWithIdpType(body) {\n  return Post(`${urls.identity.auth.v1}/user/saml/prelogin`, body);\n}\nexport async function postLogin(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/saml/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function oidcPostLogin(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/oidc/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function login(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user`, body);\n  return generateLoginResponse(data);\n}\nexport async function loginWithMfa(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/mfa/verify`, body);\n  return generateLoginResponse(data);\n}\nexport async function activateAccount(body) {\n  return Post(`${urls.identity.users.v1}/activate`, body);\n}\nexport async function getActivateAccountStrategy(params) {\n  return Get(`${urls.identity.users.v1}/activate/strategy`, params);\n}\nexport async function resendActivationEmail(body) {\n  return Post(`${urls.identity.users.v1}/activate/reset`, body);\n}\nexport async function acceptInvitation(body) {\n  return Post(`${urls.identity.users.v1}/invitation/accept`, body);\n}\nexport async function refreshToken() {\n  const data = await Post(`${urls.identity.auth.v1}/user/token/refresh`);\n  return generateLoginResponse(data);\n}\nexport async function refreshTokenV2() {\n  const data = await Post(`${urls.identity.auth.v1}/user/token/refresh`);\n  return generateLoginResponseV2(data);\n}\nexport async function logout() {\n  return Post(`${urls.identity.auth.v1}/logout`);\n}\nexport async function forgotPassword(body) {\n  return Post(`${urls.identity.users.v1}/passwords/reset`, body);\n}\nexport async function resetPassword(body) {\n  return Post(`${urls.identity.users.v1}/passwords/reset/verify`, body);\n}\nexport async function loadPasswordConfig(params) {\n  return Get(`${urls.identity.users.v1}/passwords/config`, params);\n}\nexport async function recoverMfaToken(body) {\n  return Post(`${urls.identity.auth.v1}/user/mfa/recover`, body);\n}\nexport async function enrollMfa() {\n  return Post(`${urls.identity.users.v1}/mfa/enroll`);\n}\nexport async function verifyMfa(body) {\n  return Post(`${urls.identity.users.v1}/mfa/enroll/verify`, body);\n}\nexport async function disableMfa(body) {\n  return Post(`${urls.identity.users.v1}/mfa/disable`, body);\n}\nexport async function getSamlConfiguration() {\n  return Get(`${urls.team.sso.v1}/saml/configurations`);\n}\nexport async function updateSamlConfiguration(body) {\n  return Post(`${urls.team.sso.v1}/saml/configurations`, body);\n}\nexport async function getSamlVendorConfiguration() {\n  return Get(`${urls.team.sso.v1}/saml/configurations/vendor-config`);\n}\nexport async function updateSamlVendorMetadata(body) {\n  return Put(`${urls.team.sso.v1}/saml/configurations/metadata`, body);\n}\nexport async function validateSamlDomain() {\n  return Put(`${urls.team.sso.v1}/saml/validations/domain`);\n}\nexport async function getSamlRoles() {\n  return Get(`${urls.team.sso.v1}/saml/configurations/roles/default`);\n}\nexport async function getSamlRolesGroups() {\n  return Get(`${urls.team.sso.v2}/saml/configurations/groups`);\n}\nexport async function updateSamlRoles({\n  roleIds\n}) {\n  return Post(`${urls.team.sso.v1}/saml/configurations/roles/default`, {\n    roleIds\n  });\n}\nexport async function createSamlGroup({\n  roleIds,\n  group\n}) {\n  return Post(`${urls.team.sso.v2}/saml/configurations/groups`, {\n    group,\n    roleIds\n  });\n}\nexport async function updateSamlGroup({\n  roleIds,\n  group,\n  id\n}) {\n  return Patch(`${urls.team.sso.v2}/saml/configurations/groups/${id}`, {\n    group,\n    roleIds\n  });\n}\nexport async function deleteSamlGroup({\n  id\n}) {\n  return Delete(`${urls.team.sso.v2}/saml/configurations/groups/${id}`);\n}\nexport async function getOidcConfiguration() {\n  return Get(`${urls.team.sso.v1}/oidc/configurations`);\n}\nexport async function getSSOPublicConfiguration() {\n  return Get(`${urls.team.sso.v2}/configurations/public`);\n}\nexport async function getSocialLoginProviders() {\n  return Get(urls.identity.sso.v1);\n}\nexport async function getSocialLoginProvidersV2() {\n  return Get(urls.identity.sso.v2);\n}\nexport async function loginViaSocialLogin({\n  provider,\n  code,\n  redirectUri,\n  codeVerifier,\n  metadata,\n  invitationToken,\n  state\n}) {\n  const params = {\n    code\n  };\n\n  if (redirectUri) {\n    params.redirectUri = redirectUri;\n  }\n\n  if (codeVerifier) {\n    params.code_verifier = codeVerifier;\n  }\n\n  if (state) {\n    params.state = state;\n  }\n\n  return Post(`${urls.identity.auth.v1}/user/sso/${provider}/postlogin`, {\n    metadata,\n    invitationToken\n  }, {\n    params\n  });\n}\nexport async function getVendorConfig() {\n  return Get(`${urls.identity.configurations.v1}/public`);\n}\nexport async function signUpUser(body) {\n  const {\n    shouldActivate,\n    authResponse,\n    userId,\n    tenantId\n  } = await Post(`${urls.identity.users.v1}/signUp`, body);\n  const loginResponse = !shouldActivate && authResponse ? await generateLoginResponse(authResponse) : undefined;\n  return {\n    shouldActivate,\n    user: loginResponse,\n    userId,\n    tenantId\n  };\n}\nexport async function getCurrentUserSessions() {\n  return Get(urls.identity.users.sessions.currentUser.v1);\n}\nexport async function getCurrentUserSession() {\n  return Get(`${urls.identity.users.sessions.currentUser.v1}/current`);\n}\nexport async function revokeSessionsForUser(userId) {\n  return Post(`${urls.identity.users.sessions.v1}/revoke`, {\n    userId\n  });\n}\nexport async function getSessionConfigurations() {\n  return Get(urls.identity.users.sessions.configurations.v1);\n}\nexport async function createOrUpdateSessionConfigrations(body) {\n  await Post(urls.identity.users.sessions.configurations.v1, body);\n}\nexport async function deleteSessionForUser(id) {\n  await Delete(`${urls.identity.users.sessions.currentUser.v1}/${id}`);\n}\nexport async function deleteAllSessionsForUser() {\n  await Delete(`${urls.identity.users.sessions.currentUser.v1}/all`);\n}\nexport async function getUserApiTokensData() {\n  return Get(urls.identity.users.apiTokens.v1);\n}\nexport async function getTenantApiTokensData() {\n  return Get(urls.identity.tenants.apiTokens.v1);\n}\nexport async function updateUserApiTokensData(body) {\n  return Post(urls.identity.users.apiTokens.v1, body);\n}\nexport async function updateTenantApiTokensData(body) {\n  return Post(urls.identity.tenants.apiTokens.v2, body);\n}\nexport async function deleteTenantApiToken({\n  tokenId\n}) {\n  return Delete(`${urls.identity.tenants.apiTokens.v1}/${tokenId}`);\n}\nexport async function deleteUserApiToken({\n  tokenId\n}) {\n  return Delete(`${urls.identity.users.apiTokens.v1}/${tokenId}`);\n}\nexport async function getUserById({\n  userId\n}) {\n  return Get(`${urls.identity.users.v1}/${userId}`);\n}\nexport async function checkIfAllowToRememberMfaDevice(mfaToken) {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy/allow-remember-device`, {\n    mfaToken\n  });\n}\nexport async function passwordlessPreLogin(_ref) {\n  let {\n    type\n  } = _ref,\n      body = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return Post(`${urls.identity.auth.v1}/passwordless/${type.toLocaleLowerCase()}/prelogin`, body);\n}\nexport async function passwordlessPostLogin(_ref2) {\n  let {\n    type\n  } = _ref2,\n      body = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.identity.auth.v1}/passwordless/${type.toLocaleLowerCase()}/postlogin`, body);\n}\nexport async function verifyInviteToken({\n  token\n}) {\n  return Post(urls.identity.tenants.invites.verify.v1, {\n    token\n  });\n}\nexport async function getSSOConfigurations() {\n  return Get(`${urls.team.sso.v1}/configurations`);\n}\nexport async function createSSOConfiguration(body) {\n  return Post(`${urls.team.sso.v1}/configurations`, body);\n}\nexport async function updateSSOConfiguration(ssoConfigId, body) {\n  return Patch(`${urls.team.sso.v1}/configurations/${ssoConfigId}`, body);\n}\nexport async function deleteSSOConfiguration(ssoConfigId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}`);\n}\nexport async function createSSOConfigurationByMetadata(body) {\n  return Post(`${urls.team.sso.v1}/configurations/metadata`, body);\n}\nexport async function updateSSOConfigurationByMetadata(ssoConfigId, body) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/metadata`, body);\n}\nexport async function createSSODomain(ssoConfigId, body) {\n  return Post(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains`, body);\n}\nexport async function deleteSSODomain(ssoConfigId, domainId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains/${domainId}`);\n}\nexport async function validateSSODomain(ssoConfigId, domainId) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains/${domainId}/validate`);\n}\nexport async function getSSODefaultRoles(ssoConfigId) {\n  return Get(`${urls.team.sso.v1}/configurations/${ssoConfigId}/roles`);\n}\nexport async function setSSODefaultRoles(ssoConfigId, body) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/roles`, body);\n}\nexport async function createSSOGroup(ssoConfigId, body) {\n  return Post(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups`, body);\n}\nexport async function updateSSOGroup(ssoConfigId, {\n  roleIds,\n  group,\n  id\n}) {\n  return Patch(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups/${id}`, {\n    group,\n    roleIds\n  });\n}\nexport async function deleteSSOGroup(ssoConfigId, groupId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups/${groupId}`);\n}\nexport async function getSSOGroups(ssoConfigId) {\n  return Get(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups`);\n}\nexport async function preLoginV2(body) {\n  return Post(`${urls.identity.auth.v2}/user/sso/prelogin`, body);\n}\nexport async function oidcPostLoginV2(body) {\n  const data = await Post(`${urls.identity.auth.v2}/user/oidc/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function exchangeOAuthTokens(body) {\n  const data = await Post(`${urls.oauth.v1}/token`, body);\n  return generateLoginResponseFromOAuthResponse(data);\n}\nexport async function resetPhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/reset`, body);\n}\nexport async function verifyResetPhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/reset/verify`, body);\n}\nexport async function changePhoneNumberWithVerification(body) {\n  return Post(`${urls.identity.users.v1}/phone`, body);\n}\nexport async function verifyChangePhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/verify`, body);\n}\nexport async function changePhoneNumber(body) {\n  return Put(`${urls.identity.users.v1}/phone/change`, body);\n}\nexport async function webAuthnPreLogin(body) {\n  return Post(`${urls.identity.auth.v1}/webauthn/prelogin`, body);\n}\nexport async function webAuthnPostLogin(body) {\n  return Post(`${urls.identity.auth.v1}/webauthn/postlogin`, body);\n}\nexport async function webAuthnCreateNewDeviceSession() {\n  return Post(urls.identity.webAuthnDevices.v1);\n}\nexport async function verifyNewDeviceSession(body) {\n  return Post(`${urls.identity.webAuthnDevices.v1}/verify`, body);\n}\nexport async function getVendorPublicAuthStrategiesConfig() {\n  return Get(`${urls.identity.configurations.v1}/auth/strategies/public`);\n}\n;","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/auth/index.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","getTenants","urls","ContextHolder","Delete","Get","Patch","Post","Put","jwtDecode","generateLoginResponse","loginResponse","accessToken","setAccessToken","me","identity","users","v2","decodedContent","user","setUser","generateLoginResponseV2","tenants","Promise","all","generateLoginResponseFromOAuthResponse","oauthResponse","id_token","mfaRequired","refreshToken","refresh_token","expiresIn","exp","Math","ceil","Date","getTime","preLogin","body","address","auth","v1","preLoginWithIdpType","postLogin","data","oidcPostLogin","login","loginWithMfa","activateAccount","getActivateAccountStrategy","params","resendActivationEmail","acceptInvitation","refreshTokenV2","logout","forgotPassword","resetPassword","loadPasswordConfig","recoverMfaToken","enrollMfa","verifyMfa","disableMfa","getSamlConfiguration","team","sso","updateSamlConfiguration","getSamlVendorConfiguration","updateSamlVendorMetadata","validateSamlDomain","getSamlRoles","getSamlRolesGroups","updateSamlRoles","roleIds","createSamlGroup","group","updateSamlGroup","id","deleteSamlGroup","getOidcConfiguration","getSSOPublicConfiguration","getSocialLoginProviders","getSocialLoginProvidersV2","loginViaSocialLogin","provider","code","redirectUri","codeVerifier","metadata","invitationToken","state","code_verifier","getVendorConfig","configurations","signUpUser","shouldActivate","authResponse","userId","tenantId","undefined","getCurrentUserSessions","sessions","currentUser","getCurrentUserSession","revokeSessionsForUser","getSessionConfigurations","createOrUpdateSessionConfigrations","deleteSessionForUser","deleteAllSessionsForUser","getUserApiTokensData","apiTokens","getTenantApiTokensData","updateUserApiTokensData","updateTenantApiTokensData","deleteTenantApiToken","tokenId","deleteUserApiToken","getUserById","checkIfAllowToRememberMfaDevice","mfaToken","passwordlessPreLogin","_ref","type","toLocaleLowerCase","passwordlessPostLogin","_ref2","verifyInviteToken","token","invites","verify","getSSOConfigurations","createSSOConfiguration","updateSSOConfiguration","ssoConfigId","deleteSSOConfiguration","createSSOConfigurationByMetadata","updateSSOConfigurationByMetadata","createSSODomain","deleteSSODomain","domainId","validateSSODomain","getSSODefaultRoles","setSSODefaultRoles","createSSOGroup","updateSSOGroup","deleteSSOGroup","groupId","getSSOGroups","preLoginV2","oidcPostLoginV2","exchangeOAuthTokens","oauth","resetPhoneNumber","verifyResetPhoneNumber","changePhoneNumberWithVerification","verifyChangePhoneNumber","changePhoneNumber","webAuthnPreLogin","webAuthnPostLogin","webAuthnCreateNewDeviceSession","webAuthnDevices","verifyNewDeviceSession","getVendorPublicAuthStrategiesConfig"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"type\"],\n      _excluded2 = [\"type\"];\nimport { getTenants } from \"../tenants\";\nexport * from './secutiry-poilicy';\nexport * from './enums';\nimport { urls } from '../constants';\nimport { ContextHolder } from '../ContextHolder';\nimport { Delete, Get, Patch, Post, Put } from '../fetch';\nimport { jwtDecode } from '../jwt';\nexport async function generateLoginResponse(loginResponse) {\n  if (!loginResponse.accessToken) {\n    return loginResponse;\n  }\n\n  ContextHolder.setAccessToken(loginResponse.accessToken);\n  const me = await Get(`${urls.identity.users.v2}/me`);\n  const decodedContent = loginResponse.accessToken ? jwtDecode(loginResponse.accessToken) : {};\n\n  const user = _extends({}, loginResponse, decodedContent, me);\n\n  ContextHolder.setUser(user);\n  return user;\n}\nexport async function generateLoginResponseV2(loginResponse) {\n  if (!loginResponse.accessToken) {\n    return {\n      user: loginResponse\n    };\n  }\n\n  ContextHolder.setAccessToken(loginResponse.accessToken);\n  const [me, tenants] = await Promise.all([Get(`${urls.identity.users.v2}/me`), getTenants()]);\n  const decodedContent = loginResponse.accessToken ? jwtDecode(loginResponse.accessToken) : {};\n\n  const user = _extends({}, loginResponse, decodedContent, me);\n\n  ContextHolder.setUser(user);\n  return {\n    user,\n    tenants\n  };\n}\nexport async function generateLoginResponseFromOAuthResponse(oauthResponse) {\n  ContextHolder.setAccessToken(oauthResponse.id_token);\n  const me = await Get(`${urls.identity.users.v2}/me`);\n  const decodedContent = oauthResponse.id_token ? jwtDecode(oauthResponse.id_token) : {};\n\n  const user = _extends({\n    mfaRequired: false,\n    accessToken: oauthResponse.id_token,\n    refreshToken: oauthResponse.refresh_token\n  }, decodedContent, me, {\n    expiresIn: decodedContent.exp ? Math.ceil(decodedContent.exp - new Date().getTime() / 1000) : 300\n  });\n\n  ContextHolder.setUser(user);\n  return user;\n}\nexport async function preLogin(body) {\n  try {\n    const {\n      address\n    } = await Post(`${urls.identity.auth.v1}/user/saml/prelogin`, body);\n    return address;\n  } catch {\n    return null;\n  }\n}\nexport async function preLoginWithIdpType(body) {\n  return Post(`${urls.identity.auth.v1}/user/saml/prelogin`, body);\n}\nexport async function postLogin(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/saml/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function oidcPostLogin(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/oidc/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function login(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user`, body);\n  return generateLoginResponse(data);\n}\nexport async function loginWithMfa(body) {\n  const data = await Post(`${urls.identity.auth.v1}/user/mfa/verify`, body);\n  return generateLoginResponse(data);\n}\nexport async function activateAccount(body) {\n  return Post(`${urls.identity.users.v1}/activate`, body);\n}\nexport async function getActivateAccountStrategy(params) {\n  return Get(`${urls.identity.users.v1}/activate/strategy`, params);\n}\nexport async function resendActivationEmail(body) {\n  return Post(`${urls.identity.users.v1}/activate/reset`, body);\n}\nexport async function acceptInvitation(body) {\n  return Post(`${urls.identity.users.v1}/invitation/accept`, body);\n}\nexport async function refreshToken() {\n  const data = await Post(`${urls.identity.auth.v1}/user/token/refresh`);\n  return generateLoginResponse(data);\n}\nexport async function refreshTokenV2() {\n  const data = await Post(`${urls.identity.auth.v1}/user/token/refresh`);\n  return generateLoginResponseV2(data);\n}\nexport async function logout() {\n  return Post(`${urls.identity.auth.v1}/logout`);\n}\nexport async function forgotPassword(body) {\n  return Post(`${urls.identity.users.v1}/passwords/reset`, body);\n}\nexport async function resetPassword(body) {\n  return Post(`${urls.identity.users.v1}/passwords/reset/verify`, body);\n}\nexport async function loadPasswordConfig(params) {\n  return Get(`${urls.identity.users.v1}/passwords/config`, params);\n}\nexport async function recoverMfaToken(body) {\n  return Post(`${urls.identity.auth.v1}/user/mfa/recover`, body);\n}\nexport async function enrollMfa() {\n  return Post(`${urls.identity.users.v1}/mfa/enroll`);\n}\nexport async function verifyMfa(body) {\n  return Post(`${urls.identity.users.v1}/mfa/enroll/verify`, body);\n}\nexport async function disableMfa(body) {\n  return Post(`${urls.identity.users.v1}/mfa/disable`, body);\n}\nexport async function getSamlConfiguration() {\n  return Get(`${urls.team.sso.v1}/saml/configurations`);\n}\nexport async function updateSamlConfiguration(body) {\n  return Post(`${urls.team.sso.v1}/saml/configurations`, body);\n}\nexport async function getSamlVendorConfiguration() {\n  return Get(`${urls.team.sso.v1}/saml/configurations/vendor-config`);\n}\nexport async function updateSamlVendorMetadata(body) {\n  return Put(`${urls.team.sso.v1}/saml/configurations/metadata`, body);\n}\nexport async function validateSamlDomain() {\n  return Put(`${urls.team.sso.v1}/saml/validations/domain`);\n}\nexport async function getSamlRoles() {\n  return Get(`${urls.team.sso.v1}/saml/configurations/roles/default`);\n}\nexport async function getSamlRolesGroups() {\n  return Get(`${urls.team.sso.v2}/saml/configurations/groups`);\n}\nexport async function updateSamlRoles({\n  roleIds\n}) {\n  return Post(`${urls.team.sso.v1}/saml/configurations/roles/default`, {\n    roleIds\n  });\n}\nexport async function createSamlGroup({\n  roleIds,\n  group\n}) {\n  return Post(`${urls.team.sso.v2}/saml/configurations/groups`, {\n    group,\n    roleIds\n  });\n}\nexport async function updateSamlGroup({\n  roleIds,\n  group,\n  id\n}) {\n  return Patch(`${urls.team.sso.v2}/saml/configurations/groups/${id}`, {\n    group,\n    roleIds\n  });\n}\nexport async function deleteSamlGroup({\n  id\n}) {\n  return Delete(`${urls.team.sso.v2}/saml/configurations/groups/${id}`);\n}\nexport async function getOidcConfiguration() {\n  return Get(`${urls.team.sso.v1}/oidc/configurations`);\n}\nexport async function getSSOPublicConfiguration() {\n  return Get(`${urls.team.sso.v2}/configurations/public`);\n}\nexport async function getSocialLoginProviders() {\n  return Get(urls.identity.sso.v1);\n}\nexport async function getSocialLoginProvidersV2() {\n  return Get(urls.identity.sso.v2);\n}\nexport async function loginViaSocialLogin({\n  provider,\n  code,\n  redirectUri,\n  codeVerifier,\n  metadata,\n  invitationToken,\n  state\n}) {\n  const params = {\n    code\n  };\n\n  if (redirectUri) {\n    params.redirectUri = redirectUri;\n  }\n\n  if (codeVerifier) {\n    params.code_verifier = codeVerifier;\n  }\n\n  if (state) {\n    params.state = state;\n  }\n\n  return Post(`${urls.identity.auth.v1}/user/sso/${provider}/postlogin`, {\n    metadata,\n    invitationToken\n  }, {\n    params\n  });\n}\nexport async function getVendorConfig() {\n  return Get(`${urls.identity.configurations.v1}/public`);\n}\nexport async function signUpUser(body) {\n  const {\n    shouldActivate,\n    authResponse,\n    userId,\n    tenantId\n  } = await Post(`${urls.identity.users.v1}/signUp`, body);\n  const loginResponse = !shouldActivate && authResponse ? await generateLoginResponse(authResponse) : undefined;\n  return {\n    shouldActivate,\n    user: loginResponse,\n    userId,\n    tenantId\n  };\n}\nexport async function getCurrentUserSessions() {\n  return Get(urls.identity.users.sessions.currentUser.v1);\n}\nexport async function getCurrentUserSession() {\n  return Get(`${urls.identity.users.sessions.currentUser.v1}/current`);\n}\nexport async function revokeSessionsForUser(userId) {\n  return Post(`${urls.identity.users.sessions.v1}/revoke`, {\n    userId\n  });\n}\nexport async function getSessionConfigurations() {\n  return Get(urls.identity.users.sessions.configurations.v1);\n}\nexport async function createOrUpdateSessionConfigrations(body) {\n  await Post(urls.identity.users.sessions.configurations.v1, body);\n}\nexport async function deleteSessionForUser(id) {\n  await Delete(`${urls.identity.users.sessions.currentUser.v1}/${id}`);\n}\nexport async function deleteAllSessionsForUser() {\n  await Delete(`${urls.identity.users.sessions.currentUser.v1}/all`);\n}\nexport async function getUserApiTokensData() {\n  return Get(urls.identity.users.apiTokens.v1);\n}\nexport async function getTenantApiTokensData() {\n  return Get(urls.identity.tenants.apiTokens.v1);\n}\nexport async function updateUserApiTokensData(body) {\n  return Post(urls.identity.users.apiTokens.v1, body);\n}\nexport async function updateTenantApiTokensData(body) {\n  return Post(urls.identity.tenants.apiTokens.v2, body);\n}\nexport async function deleteTenantApiToken({\n  tokenId\n}) {\n  return Delete(`${urls.identity.tenants.apiTokens.v1}/${tokenId}`);\n}\nexport async function deleteUserApiToken({\n  tokenId\n}) {\n  return Delete(`${urls.identity.users.apiTokens.v1}/${tokenId}`);\n}\nexport async function getUserById({\n  userId\n}) {\n  return Get(`${urls.identity.users.v1}/${userId}`);\n}\nexport async function checkIfAllowToRememberMfaDevice(mfaToken) {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy/allow-remember-device`, {\n    mfaToken\n  });\n}\nexport async function passwordlessPreLogin(_ref) {\n  let {\n    type\n  } = _ref,\n      body = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return Post(`${urls.identity.auth.v1}/passwordless/${type.toLocaleLowerCase()}/prelogin`, body);\n}\nexport async function passwordlessPostLogin(_ref2) {\n  let {\n    type\n  } = _ref2,\n      body = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.identity.auth.v1}/passwordless/${type.toLocaleLowerCase()}/postlogin`, body);\n}\nexport async function verifyInviteToken({\n  token\n}) {\n  return Post(urls.identity.tenants.invites.verify.v1, {\n    token\n  });\n}\nexport async function getSSOConfigurations() {\n  return Get(`${urls.team.sso.v1}/configurations`);\n}\nexport async function createSSOConfiguration(body) {\n  return Post(`${urls.team.sso.v1}/configurations`, body);\n}\nexport async function updateSSOConfiguration(ssoConfigId, body) {\n  return Patch(`${urls.team.sso.v1}/configurations/${ssoConfigId}`, body);\n}\nexport async function deleteSSOConfiguration(ssoConfigId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}`);\n}\nexport async function createSSOConfigurationByMetadata(body) {\n  return Post(`${urls.team.sso.v1}/configurations/metadata`, body);\n}\nexport async function updateSSOConfigurationByMetadata(ssoConfigId, body) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/metadata`, body);\n}\nexport async function createSSODomain(ssoConfigId, body) {\n  return Post(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains`, body);\n}\nexport async function deleteSSODomain(ssoConfigId, domainId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains/${domainId}`);\n}\nexport async function validateSSODomain(ssoConfigId, domainId) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/domains/${domainId}/validate`);\n}\nexport async function getSSODefaultRoles(ssoConfigId) {\n  return Get(`${urls.team.sso.v1}/configurations/${ssoConfigId}/roles`);\n}\nexport async function setSSODefaultRoles(ssoConfigId, body) {\n  return Put(`${urls.team.sso.v1}/configurations/${ssoConfigId}/roles`, body);\n}\nexport async function createSSOGroup(ssoConfigId, body) {\n  return Post(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups`, body);\n}\nexport async function updateSSOGroup(ssoConfigId, {\n  roleIds,\n  group,\n  id\n}) {\n  return Patch(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups/${id}`, {\n    group,\n    roleIds\n  });\n}\nexport async function deleteSSOGroup(ssoConfigId, groupId) {\n  return Delete(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups/${groupId}`);\n}\nexport async function getSSOGroups(ssoConfigId) {\n  return Get(`${urls.team.sso.v1}/configurations/${ssoConfigId}/groups`);\n}\nexport async function preLoginV2(body) {\n  return Post(`${urls.identity.auth.v2}/user/sso/prelogin`, body);\n}\nexport async function oidcPostLoginV2(body) {\n  const data = await Post(`${urls.identity.auth.v2}/user/oidc/postlogin`, body);\n  return generateLoginResponse(data);\n}\nexport async function exchangeOAuthTokens(body) {\n  const data = await Post(`${urls.oauth.v1}/token`, body);\n  return generateLoginResponseFromOAuthResponse(data);\n}\nexport async function resetPhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/reset`, body);\n}\nexport async function verifyResetPhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/reset/verify`, body);\n}\nexport async function changePhoneNumberWithVerification(body) {\n  return Post(`${urls.identity.users.v1}/phone`, body);\n}\nexport async function verifyChangePhoneNumber(body) {\n  return Post(`${urls.identity.users.v1}/phone/verify`, body);\n}\nexport async function changePhoneNumber(body) {\n  return Put(`${urls.identity.users.v1}/phone/change`, body);\n}\nexport async function webAuthnPreLogin(body) {\n  return Post(`${urls.identity.auth.v1}/webauthn/prelogin`, body);\n}\nexport async function webAuthnPostLogin(body) {\n  return Post(`${urls.identity.auth.v1}/webauthn/postlogin`, body);\n}\nexport async function webAuthnCreateNewDeviceSession() {\n  return Post(urls.identity.webAuthnDevices.v1);\n}\nexport async function verifyNewDeviceSession(body) {\n  return Post(`${urls.identity.webAuthnDevices.v1}/verify`, body);\n}\nexport async function getVendorPublicAuthStrategiesConfig() {\n  return Get(`${urls.identity.configurations.v1}/auth/strategies/public`);\n}\n;"]},"metadata":{},"sourceType":"module"}