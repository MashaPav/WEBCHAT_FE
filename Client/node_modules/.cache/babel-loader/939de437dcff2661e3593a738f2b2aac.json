{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ContextHolder } from './ContextHolder';\nimport { FronteggApiError } from './error';\nexport function getBaseUrl(context, url) {\n  let baseUrl;\n\n  if (typeof context.baseUrl === 'function') {\n    baseUrl = context.baseUrl(url);\n  } else {\n    baseUrl = context.baseUrl;\n  }\n\n  const prefix = context.urlPrefix || 'frontegg';\n\n  if (!baseUrl.endsWith('/')) {\n    baseUrl += '/';\n  }\n\n  if (!baseUrl.endsWith(prefix)) {\n    baseUrl += prefix;\n  }\n\n  return baseUrl;\n}\n\nasync function prepareUrl(context, url, params) {\n  const baseUrl = getBaseUrl(context, url);\n  const paramsToSend = await buildQueryParams(context, params);\n  let finalUrl = url.startsWith('http') ? url : `${baseUrl}${url}`;\n  const hasKeys = Object.keys(paramsToSend).length > 0;\n\n  if (paramsToSend && hasKeys) {\n    const urlParams = new URLSearchParams(paramsToSend);\n    finalUrl += `?${urlParams}`;\n  }\n\n  return finalUrl;\n}\n\nasync function buildRequestHeaders(context, contentType) {\n  var _context$tokenResolve;\n\n  const authToken = await ((_context$tokenResolve = context == null ? void 0 : context.tokenResolver) != null ? _context$tokenResolve : ContextHolder.getAccessToken)();\n  const headers = {};\n\n  if (authToken) {\n    headers.Authorization = `Bearer ${authToken}`;\n  }\n\n  if (contentType) {\n    headers['Content-Type'] = contentType;\n  }\n\n  for (const additionalHeader of await getAdditionalHeaders(context)) {\n    headers[`${additionalHeader.key}`] = `${additionalHeader.value}`;\n  }\n\n  headers['x-frontegg-source'] = 'frontegg-react';\n  return headers;\n}\n\nasync function buildQueryParams(context, params) {\n  if (!params) {\n    params = {};\n  }\n\n  const additionalQueryParams = await getAdditionalQueryParams(context);\n\n  for (const queryParam of additionalQueryParams) {\n    params[queryParam.key] = queryParam.value;\n  }\n\n  const keys = Object.keys(params);\n\n  for (const key of keys) {\n    const value = params[key];\n    params[key] = typeof value === 'object' ? JSON.stringify(value) : value;\n  }\n\n  return params;\n}\n\nasync function getAdditionalQueryParams(context) {\n  let output = [];\n\n  if (context.additionalQueryParamsResolver) {\n    output = await context.additionalQueryParamsResolver();\n  }\n\n  return output;\n}\n\nasync function getAdditionalHeaders(context) {\n  let output = [];\n\n  if (context.additionalHeadersResolver) {\n    output = await context.additionalHeadersResolver();\n  }\n\n  return output;\n}\n\nconst sendRequest = async opts => {\n  var _opts$method, _ref, _opts$credentials;\n\n  const context = ContextHolder.getContext();\n  const headers = await buildRequestHeaders(context, opts.contentType);\n  const url = await prepareUrl(context, opts.url, opts.params);\n  const response = await fetch(url, {\n    body: opts.body ? opts.contentType === 'application/json' ? JSON.stringify(opts.body) : opts.body : null,\n    method: (_opts$method = opts.method) != null ? _opts$method : 'GET',\n    headers: _extends({}, headers, opts.headers),\n    credentials: (_ref = (_opts$credentials = opts.credentials) != null ? _opts$credentials : context.requestCredentials) != null ? _ref : 'same-origin'\n  });\n\n  if (response.status === 302) {\n    window.location.href = await response.text();\n    return new Promise(() => {});\n  }\n\n  if (!response.ok) {\n    var _context$logLevel, _context$logLevel2;\n\n    if (response.status === 413) {\n      throw new FronteggApiError('Error request is too large', response.status);\n    }\n\n    let errorMessage;\n\n    try {\n      errorMessage = await response.text();\n      errorMessage = JSON.parse(errorMessage);\n    } catch (e) {}\n\n    if (errorMessage.errors) {\n      errorMessage = errorMessage.errors.join(', ');\n    } else if (typeof errorMessage !== 'string') {\n      errorMessage = `Error ${response.status} - ${response.statusText}`;\n    }\n\n    if (response.status >= 400 && response.status < 500 && ['warn'].includes((_context$logLevel = context.logLevel) != null ? _context$logLevel : '')) console.warn(errorMessage);else if (response.status === 500 && ['warn', 'error'].includes((_context$logLevel2 = context.logLevel) != null ? _context$logLevel2 : '')) console.error(errorMessage);\n    throw new FronteggApiError(errorMessage, response.status);\n  }\n\n  if (!opts.responseType || opts.responseType === 'json') {\n    try {\n      return await response.json();\n    } catch (e) {\n      return {};\n    }\n  } else if (opts.responseType === 'blob') {\n    const {\n      outputFileName\n    } = opts.params;\n    return await response.blob().then(blob => URL.createObjectURL(blob)).then(url => {\n      const tempLink = document.createElement('a');\n      tempLink.href = url;\n      tempLink.setAttribute('download', outputFileName || 'output');\n      tempLink.click();\n    });\n  } else {\n    return await response.text();\n  }\n};\n\nexport const Get = async (url, params, opts) => sendRequest(_extends({\n  url,\n  method: 'GET',\n  contentType: 'application/json',\n  params\n}, opts));\nexport const Post = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'POST',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Patch = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'PATCH',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Put = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'PUT',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Delete = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'DELETE',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const PostDownload = async (url, body, params, opts) => sendRequest(_extends({\n  url,\n  method: 'POST',\n  contentType: 'application/json',\n  responseType: 'blob',\n  body,\n  params\n}, opts));","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/fetch.js"],"names":["_extends","ContextHolder","FronteggApiError","getBaseUrl","context","url","baseUrl","prefix","urlPrefix","endsWith","prepareUrl","params","paramsToSend","buildQueryParams","finalUrl","startsWith","hasKeys","Object","keys","length","urlParams","URLSearchParams","buildRequestHeaders","contentType","_context$tokenResolve","authToken","tokenResolver","getAccessToken","headers","Authorization","additionalHeader","getAdditionalHeaders","key","value","additionalQueryParams","getAdditionalQueryParams","queryParam","JSON","stringify","output","additionalQueryParamsResolver","additionalHeadersResolver","sendRequest","opts","_opts$method","_ref","_opts$credentials","getContext","response","fetch","body","method","credentials","requestCredentials","status","window","location","href","text","Promise","ok","_context$logLevel","_context$logLevel2","errorMessage","parse","e","errors","join","statusText","includes","logLevel","console","warn","error","responseType","json","outputFileName","blob","then","URL","createObjectURL","tempLink","document","createElement","setAttribute","click","Get","Post","Patch","Put","Delete","PostDownload"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ContextHolder } from './ContextHolder';\nimport { FronteggApiError } from './error';\nexport function getBaseUrl(context, url) {\n  let baseUrl;\n\n  if (typeof context.baseUrl === 'function') {\n    baseUrl = context.baseUrl(url);\n  } else {\n    baseUrl = context.baseUrl;\n  }\n\n  const prefix = context.urlPrefix || 'frontegg';\n\n  if (!baseUrl.endsWith('/')) {\n    baseUrl += '/';\n  }\n\n  if (!baseUrl.endsWith(prefix)) {\n    baseUrl += prefix;\n  }\n\n  return baseUrl;\n}\n\nasync function prepareUrl(context, url, params) {\n  const baseUrl = getBaseUrl(context, url);\n  const paramsToSend = await buildQueryParams(context, params);\n  let finalUrl = url.startsWith('http') ? url : `${baseUrl}${url}`;\n  const hasKeys = Object.keys(paramsToSend).length > 0;\n\n  if (paramsToSend && hasKeys) {\n    const urlParams = new URLSearchParams(paramsToSend);\n    finalUrl += `?${urlParams}`;\n  }\n\n  return finalUrl;\n}\n\nasync function buildRequestHeaders(context, contentType) {\n  var _context$tokenResolve;\n\n  const authToken = await ((_context$tokenResolve = context == null ? void 0 : context.tokenResolver) != null ? _context$tokenResolve : ContextHolder.getAccessToken)();\n  const headers = {};\n\n  if (authToken) {\n    headers.Authorization = `Bearer ${authToken}`;\n  }\n\n  if (contentType) {\n    headers['Content-Type'] = contentType;\n  }\n\n  for (const additionalHeader of await getAdditionalHeaders(context)) {\n    headers[`${additionalHeader.key}`] = `${additionalHeader.value}`;\n  }\n\n  headers['x-frontegg-source'] = 'frontegg-react';\n  return headers;\n}\n\nasync function buildQueryParams(context, params) {\n  if (!params) {\n    params = {};\n  }\n\n  const additionalQueryParams = await getAdditionalQueryParams(context);\n\n  for (const queryParam of additionalQueryParams) {\n    params[queryParam.key] = queryParam.value;\n  }\n\n  const keys = Object.keys(params);\n\n  for (const key of keys) {\n    const value = params[key];\n    params[key] = typeof value === 'object' ? JSON.stringify(value) : value;\n  }\n\n  return params;\n}\n\nasync function getAdditionalQueryParams(context) {\n  let output = [];\n\n  if (context.additionalQueryParamsResolver) {\n    output = await context.additionalQueryParamsResolver();\n  }\n\n  return output;\n}\n\nasync function getAdditionalHeaders(context) {\n  let output = [];\n\n  if (context.additionalHeadersResolver) {\n    output = await context.additionalHeadersResolver();\n  }\n\n  return output;\n}\n\nconst sendRequest = async opts => {\n  var _opts$method, _ref, _opts$credentials;\n\n  const context = ContextHolder.getContext();\n  const headers = await buildRequestHeaders(context, opts.contentType);\n  const url = await prepareUrl(context, opts.url, opts.params);\n  const response = await fetch(url, {\n    body: opts.body ? opts.contentType === 'application/json' ? JSON.stringify(opts.body) : opts.body : null,\n    method: (_opts$method = opts.method) != null ? _opts$method : 'GET',\n    headers: _extends({}, headers, opts.headers),\n    credentials: (_ref = (_opts$credentials = opts.credentials) != null ? _opts$credentials : context.requestCredentials) != null ? _ref : 'same-origin'\n  });\n\n  if (response.status === 302) {\n    window.location.href = await response.text();\n    return new Promise(() => {});\n  }\n\n  if (!response.ok) {\n    var _context$logLevel, _context$logLevel2;\n\n    if (response.status === 413) {\n      throw new FronteggApiError('Error request is too large', response.status);\n    }\n\n    let errorMessage;\n\n    try {\n      errorMessage = await response.text();\n      errorMessage = JSON.parse(errorMessage);\n    } catch (e) {}\n\n    if (errorMessage.errors) {\n      errorMessage = errorMessage.errors.join(', ');\n    } else if (typeof errorMessage !== 'string') {\n      errorMessage = `Error ${response.status} - ${response.statusText}`;\n    }\n\n    if (response.status >= 400 && response.status < 500 && ['warn'].includes((_context$logLevel = context.logLevel) != null ? _context$logLevel : '')) console.warn(errorMessage);else if (response.status === 500 && ['warn', 'error'].includes((_context$logLevel2 = context.logLevel) != null ? _context$logLevel2 : '')) console.error(errorMessage);\n    throw new FronteggApiError(errorMessage, response.status);\n  }\n\n  if (!opts.responseType || opts.responseType === 'json') {\n    try {\n      return await response.json();\n    } catch (e) {\n      return {};\n    }\n  } else if (opts.responseType === 'blob') {\n    const {\n      outputFileName\n    } = opts.params;\n    return await response.blob().then(blob => URL.createObjectURL(blob)).then(url => {\n      const tempLink = document.createElement('a');\n      tempLink.href = url;\n      tempLink.setAttribute('download', outputFileName || 'output');\n      tempLink.click();\n    });\n  } else {\n    return await response.text();\n  }\n};\n\nexport const Get = async (url, params, opts) => sendRequest(_extends({\n  url,\n  method: 'GET',\n  contentType: 'application/json',\n  params\n}, opts));\nexport const Post = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'POST',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Patch = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'PATCH',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Put = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'PUT',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const Delete = async (url, body, opts) => sendRequest(_extends({\n  url,\n  method: 'DELETE',\n  contentType: 'application/json',\n  body\n}, opts));\nexport const PostDownload = async (url, body, params, opts) => sendRequest(_extends({\n  url,\n  method: 'POST',\n  contentType: 'application/json',\n  responseType: 'blob',\n  body,\n  params\n}, opts));"]},"metadata":{},"sourceType":"module"}