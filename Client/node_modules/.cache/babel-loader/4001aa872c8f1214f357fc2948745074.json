{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"dataFilters\"],\n      _excluded2 = [\"templateId\", \"dataFilters\"],\n      _excluded3 = [\"dataFilters\"];\nimport { Get, Post } from '../fetch';\nimport { urls } from '../constants';\nexport async function getReports(body) {\n  return Get(`${urls.reports.service.v2}/tenant-reports`, body);\n}\nexport async function getReport(body) {\n  return Get(`${urls.reports.service.v2}/${body.id}/tenant-reports`);\n}\nexport async function renderReport(_ref) {\n  let {\n    dataFilters\n  } = _ref,\n      body = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const html = await Get(`${urls.reports.trigger.v1}/preview-report`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {})),\n    responseType: 'html'\n  }), {\n    responseType: 'plain'\n  });\n  return {\n    html\n  };\n}\nexport async function scheduleReport(_ref2) {\n  let {\n    templateId,\n    dataFilters\n  } = _ref2,\n      body = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.reports.service.v2}/${templateId}/tenant-reports`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {}))\n  }));\n}\nexport async function downloadReport(_ref3) {\n  let {\n    dataFilters\n  } = _ref3,\n      body = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n\n  const blob = await Get(`${urls.reports.trigger.v1}/preview-report`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {}))\n  }), {\n    responseType: 'blob'\n  });\n  let contentType = 'text/html';\n  let contentExt = 'html';\n\n  if (body.responseType === 'pdf') {\n    contentType = 'application/pdf';\n    contentExt = 'pdf';\n  } else if (body.responseType === 'image') {\n    contentType = 'image/jpeg';\n    contentExt = 'jpg';\n  }\n\n  const newBlob = new Blob([blob], {\n    type: contentType\n  });\n  const fileURL = URL.createObjectURL(newBlob);\n  const tempLink = document.createElement('a');\n  tempLink.href = fileURL;\n  tempLink.setAttribute('download', `report_${body.name || ''}.${contentExt}`);\n  tempLink.click();\n  setTimeout(tempLink.remove.bind(tempLink));\n}\nexport async function sendReport(body) {\n  return Post(`${urls.reports.trigger.v1}/tenant-reports`, body);\n}","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/reports/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","Get","Post","urls","getReports","body","reports","service","v2","getReport","id","renderReport","_ref","dataFilters","html","trigger","v1","btoa","JSON","stringify","responseType","scheduleReport","_ref2","templateId","downloadReport","_ref3","blob","contentType","contentExt","newBlob","Blob","type","fileURL","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","name","click","setTimeout","remove","bind","sendReport"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,aAAD,CAAlB;AAAA,MACMC,UAAU,GAAG,CAAC,YAAD,EAAe,aAAf,CADnB;AAAA,MAEMC,UAAU,GAAG,CAAC,aAAD,CAFnB;AAGA,SAASC,GAAT,EAAcC,IAAd,QAA0B,UAA1B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAO,eAAeC,UAAf,CAA0BC,IAA1B,EAAgC;AACrC,SAAOJ,GAAG,CAAE,GAAEE,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,EAAG,iBAA5B,EAA8CH,IAA9C,CAAV;AACD;AACD,OAAO,eAAeI,SAAf,CAAyBJ,IAAzB,EAA+B;AACpC,SAAOJ,GAAG,CAAE,GAAEE,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,EAAG,IAAGH,IAAI,CAACK,EAAG,iBAAvC,CAAV;AACD;AACD,OAAO,eAAeC,YAAf,CAA4BC,IAA5B,EAAkC;AACvC,MAAI;AACFC,IAAAA;AADE,MAEAD,IAFJ;AAAA,MAGIP,IAAI,GAAGR,6BAA6B,CAACe,IAAD,EAAOd,SAAP,CAHxC;;AAKA,QAAMgB,IAAI,GAAG,MAAMb,GAAG,CAAE,GAAEE,IAAI,CAACG,OAAL,CAAaS,OAAb,CAAqBC,EAAG,iBAA5B,EAA8CpB,QAAQ,CAAC,EAAD,EAAKS,IAAL,EAAW;AACrFQ,IAAAA,WAAW,EAAEI,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeN,WAAW,IAAI,EAA9B,CAAD,CADoE;AAErFO,IAAAA,YAAY,EAAE;AAFuE,GAAX,CAAtD,EAGlB;AACFA,IAAAA,YAAY,EAAE;AADZ,GAHkB,CAAtB;AAMA,SAAO;AACLN,IAAAA;AADK,GAAP;AAGD;AACD,OAAO,eAAeO,cAAf,CAA8BC,KAA9B,EAAqC;AAC1C,MAAI;AACFC,IAAAA,UADE;AAEFV,IAAAA;AAFE,MAGAS,KAHJ;AAAA,MAIIjB,IAAI,GAAGR,6BAA6B,CAACyB,KAAD,EAAQvB,UAAR,CAJxC;;AAMA,SAAOG,IAAI,CAAE,GAAEC,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,EAAG,IAAGe,UAAW,iBAA1C,EAA4D3B,QAAQ,CAAC,EAAD,EAAKS,IAAL,EAAW;AACxFQ,IAAAA,WAAW,EAAEI,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeN,WAAW,IAAI,EAA9B,CAAD;AADuE,GAAX,CAApE,CAAX;AAGD;AACD,OAAO,eAAeW,cAAf,CAA8BC,KAA9B,EAAqC;AAC1C,MAAI;AACFZ,IAAAA;AADE,MAEAY,KAFJ;AAAA,MAGIpB,IAAI,GAAGR,6BAA6B,CAAC4B,KAAD,EAAQzB,UAAR,CAHxC;;AAKA,QAAM0B,IAAI,GAAG,MAAMzB,GAAG,CAAE,GAAEE,IAAI,CAACG,OAAL,CAAaS,OAAb,CAAqBC,EAAG,iBAA5B,EAA8CpB,QAAQ,CAAC,EAAD,EAAKS,IAAL,EAAW;AACrFQ,IAAAA,WAAW,EAAEI,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeN,WAAW,IAAI,EAA9B,CAAD;AADoE,GAAX,CAAtD,EAElB;AACFO,IAAAA,YAAY,EAAE;AADZ,GAFkB,CAAtB;AAKA,MAAIO,WAAW,GAAG,WAAlB;AACA,MAAIC,UAAU,GAAG,MAAjB;;AAEA,MAAIvB,IAAI,CAACe,YAAL,KAAsB,KAA1B,EAAiC;AAC/BO,IAAAA,WAAW,GAAG,iBAAd;AACAC,IAAAA,UAAU,GAAG,KAAb;AACD,GAHD,MAGO,IAAIvB,IAAI,CAACe,YAAL,KAAsB,OAA1B,EAAmC;AACxCO,IAAAA,WAAW,GAAG,YAAd;AACAC,IAAAA,UAAU,GAAG,KAAb;AACD;;AAED,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACJ,IAAD,CAAT,EAAiB;AAC/BK,IAAAA,IAAI,EAAEJ;AADyB,GAAjB,CAAhB;AAGA,QAAMK,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,OAApB,CAAhB;AACA,QAAMM,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAjB;AACAF,EAAAA,QAAQ,CAACG,IAAT,GAAgBN,OAAhB;AACAG,EAAAA,QAAQ,CAACI,YAAT,CAAsB,UAAtB,EAAmC,UAASlC,IAAI,CAACmC,IAAL,IAAa,EAAG,IAAGZ,UAAW,EAA1E;AACAO,EAAAA,QAAQ,CAACM,KAAT;AACAC,EAAAA,UAAU,CAACP,QAAQ,CAACQ,MAAT,CAAgBC,IAAhB,CAAqBT,QAArB,CAAD,CAAV;AACD;AACD,OAAO,eAAeU,UAAf,CAA0BxC,IAA1B,EAAgC;AACrC,SAAOH,IAAI,CAAE,GAAEC,IAAI,CAACG,OAAL,CAAaS,OAAb,CAAqBC,EAAG,iBAA5B,EAA8CX,IAA9C,CAAX;AACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"dataFilters\"],\n      _excluded2 = [\"templateId\", \"dataFilters\"],\n      _excluded3 = [\"dataFilters\"];\nimport { Get, Post } from '../fetch';\nimport { urls } from '../constants';\nexport async function getReports(body) {\n  return Get(`${urls.reports.service.v2}/tenant-reports`, body);\n}\nexport async function getReport(body) {\n  return Get(`${urls.reports.service.v2}/${body.id}/tenant-reports`);\n}\nexport async function renderReport(_ref) {\n  let {\n    dataFilters\n  } = _ref,\n      body = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const html = await Get(`${urls.reports.trigger.v1}/preview-report`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {})),\n    responseType: 'html'\n  }), {\n    responseType: 'plain'\n  });\n  return {\n    html\n  };\n}\nexport async function scheduleReport(_ref2) {\n  let {\n    templateId,\n    dataFilters\n  } = _ref2,\n      body = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.reports.service.v2}/${templateId}/tenant-reports`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {}))\n  }));\n}\nexport async function downloadReport(_ref3) {\n  let {\n    dataFilters\n  } = _ref3,\n      body = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n\n  const blob = await Get(`${urls.reports.trigger.v1}/preview-report`, _extends({}, body, {\n    dataFilters: btoa(JSON.stringify(dataFilters || {}))\n  }), {\n    responseType: 'blob'\n  });\n  let contentType = 'text/html';\n  let contentExt = 'html';\n\n  if (body.responseType === 'pdf') {\n    contentType = 'application/pdf';\n    contentExt = 'pdf';\n  } else if (body.responseType === 'image') {\n    contentType = 'image/jpeg';\n    contentExt = 'jpg';\n  }\n\n  const newBlob = new Blob([blob], {\n    type: contentType\n  });\n  const fileURL = URL.createObjectURL(newBlob);\n  const tempLink = document.createElement('a');\n  tempLink.href = fileURL;\n  tempLink.setAttribute('download', `report_${body.name || ''}.${contentExt}`);\n  tempLink.click();\n  setTimeout(tempLink.remove.bind(tempLink));\n}\nexport async function sendReport(body) {\n  return Post(`${urls.reports.trigger.v1}/tenant-reports`, body);\n}"]},"metadata":{},"sourceType":"module"}