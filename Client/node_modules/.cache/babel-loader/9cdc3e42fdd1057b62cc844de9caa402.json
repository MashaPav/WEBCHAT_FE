{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"eventKey\"],\n      _excluded2 = [\"eventKey\"];\nimport { urls } from '../constants';\nimport { Get, Patch, Post, Delete, Put } from '../fetch';\nexport const getSlackConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack`);\n};\nexport const getSlackScope = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack/applications`);\n};\nexport const getSlackChannels = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack/channels`);\n};\nexport const postSlackConfiguration = data => {\n  if (data.id) {\n    return Patch(`${urls.integrations.configurations.v1}/slack/subscription/${data.id}`, data);\n  }\n\n  return Post(`${urls.integrations.configurations.v1}/slack/subscriptions`, data);\n};\nexport const deleteSlackConfiguration = data => {\n  return Delete(`${urls.integrations.configurations.v1}/slack/subscriptions/${data.id}`);\n};\nexport const postSlackCode = code => {\n  return Post(`${urls.integrations.configurations.v1}/slack/applications/registrations`, {\n    code\n  });\n};\nexport const getEmailConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v1}/emails`);\n};\nexport const postEmailConfiguration = _ref => {\n  let {\n    eventKey\n  } = _ref,\n      data = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return Post(`${urls.integrations.configurations.v1}/emails/${eventKey}`, data);\n};\nexport const patchEmailConfiguration = ({\n  eventKey,\n  enabled\n}) => {\n  return Patch(`${urls.integrations.configurations.v1}/emails/${eventKey}`, {\n    enabled\n  });\n};\nexport const deleteEmailSubscriptions = (eventKey, subscriptionId) => {\n  return Delete(`${urls.integrations.configurations.v1}/emails/${eventKey}/subscriptions/${subscriptionId}`);\n};\nexport const putEmailSubscriptions = (subscriptionId, eventKey, data) => {\n  return Put(`${urls.integrations.configurations.v1}/emails/${eventKey}/subscriptions/${subscriptionId}`, data);\n};\nexport const deleteEmailConfiguration = eventKey => {\n  return Delete(`${urls.integrations.configurations.v1}/emails/${eventKey}`);\n};\nexport const getSMSConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v2}/sms`);\n};\nexport const postSMSConfiguration = _ref2 => {\n  let {\n    eventKey\n  } = _ref2,\n      data = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.integrations.configurations.v2}/sms/${eventKey}`, data);\n};\nexport const patchSMSConfiguration = ({\n  eventKey,\n  enabled\n}) => {\n  return Patch(`${urls.integrations.configurations.v2}/sms/${eventKey}`, {\n    enabled\n  });\n};\nexport const deleteSMSSubscriptions = (eventKey, subscriptionId) => {\n  return Delete(`${urls.integrations.configurations.v2}/sms/${eventKey}/subscriptions/${subscriptionId}`);\n};\nexport const putSMSSubscriptions = (subscriptionId, eventKey, data) => {\n  return Put(`${urls.integrations.configurations.v2}/sms/${eventKey}/subscriptions/${subscriptionId}`, data);\n};\nexport const deleteSMSConfiguration = eventKey => {\n  return Delete(`${urls.integrations.configurations.v2}/sms/${eventKey}`);\n};\nexport const getWebhooksConfigurations = () => {\n  return Get(urls.webhooks.v1);\n};\nexport const postWebhooksConfiguration = data => {\n  if (data._id) {\n    return Patch(`${urls.webhooks.v1}/${data._id}`, data);\n  } else {\n    return Post(`${urls.webhooks.v1}/custom`, data);\n  }\n};\nexport const deleteWebhooksConfiguration = id => {\n  return Delete(`${urls.webhooks.v1}/${id}`);\n};\nexport const getWebhookLog = (id, offset = 0, limit = 10) => {\n  const query = new URLSearchParams({\n    id,\n    offset: `${offset}`,\n    limit: `${limit}`\n  });\n  return Get(`${urls.webhooks.v1}/logs/?${query.toString()}`);\n};\nexport const postWebhookTest = data => {\n  return Post(`${urls.webhooks.v1}/test`, data);\n};\nexport const postWebhookRetry = id => {\n  return Post(`${urls.webhooks.v1}/logs/${id}/retries`);\n};\nexport const getCategories = () => {\n  return Get(`${urls.events.configurations.v1}/categories`);\n};\nexport const getChannelMaps = channels => {\n  return Get(urls.events.configurations.v1, {\n    channels\n  });\n};","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/connectivity/index.js"],"names":["_objectWithoutPropertiesLoose","_excluded","_excluded2","urls","Get","Patch","Post","Delete","Put","getSlackConfiguration","integrations","configurations","v1","getSlackScope","getSlackChannels","postSlackConfiguration","data","id","deleteSlackConfiguration","postSlackCode","code","getEmailConfiguration","postEmailConfiguration","_ref","eventKey","patchEmailConfiguration","enabled","deleteEmailSubscriptions","subscriptionId","putEmailSubscriptions","deleteEmailConfiguration","getSMSConfiguration","v2","postSMSConfiguration","_ref2","patchSMSConfiguration","deleteSMSSubscriptions","putSMSSubscriptions","deleteSMSConfiguration","getWebhooksConfigurations","webhooks","postWebhooksConfiguration","_id","deleteWebhooksConfiguration","getWebhookLog","offset","limit","query","URLSearchParams","toString","postWebhookTest","postWebhookRetry","getCategories","events","getChannelMaps","channels"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"eventKey\"],\n      _excluded2 = [\"eventKey\"];\nimport { urls } from '../constants';\nimport { Get, Patch, Post, Delete, Put } from '../fetch';\nexport const getSlackConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack`);\n};\nexport const getSlackScope = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack/applications`);\n};\nexport const getSlackChannels = () => {\n  return Get(`${urls.integrations.configurations.v1}/slack/channels`);\n};\nexport const postSlackConfiguration = data => {\n  if (data.id) {\n    return Patch(`${urls.integrations.configurations.v1}/slack/subscription/${data.id}`, data);\n  }\n\n  return Post(`${urls.integrations.configurations.v1}/slack/subscriptions`, data);\n};\nexport const deleteSlackConfiguration = data => {\n  return Delete(`${urls.integrations.configurations.v1}/slack/subscriptions/${data.id}`);\n};\nexport const postSlackCode = code => {\n  return Post(`${urls.integrations.configurations.v1}/slack/applications/registrations`, {\n    code\n  });\n};\nexport const getEmailConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v1}/emails`);\n};\nexport const postEmailConfiguration = _ref => {\n  let {\n    eventKey\n  } = _ref,\n      data = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return Post(`${urls.integrations.configurations.v1}/emails/${eventKey}`, data);\n};\nexport const patchEmailConfiguration = ({\n  eventKey,\n  enabled\n}) => {\n  return Patch(`${urls.integrations.configurations.v1}/emails/${eventKey}`, {\n    enabled\n  });\n};\nexport const deleteEmailSubscriptions = (eventKey, subscriptionId) => {\n  return Delete(`${urls.integrations.configurations.v1}/emails/${eventKey}/subscriptions/${subscriptionId}`);\n};\nexport const putEmailSubscriptions = (subscriptionId, eventKey, data) => {\n  return Put(`${urls.integrations.configurations.v1}/emails/${eventKey}/subscriptions/${subscriptionId}`, data);\n};\nexport const deleteEmailConfiguration = eventKey => {\n  return Delete(`${urls.integrations.configurations.v1}/emails/${eventKey}`);\n};\nexport const getSMSConfiguration = () => {\n  return Get(`${urls.integrations.configurations.v2}/sms`);\n};\nexport const postSMSConfiguration = _ref2 => {\n  let {\n    eventKey\n  } = _ref2,\n      data = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return Post(`${urls.integrations.configurations.v2}/sms/${eventKey}`, data);\n};\nexport const patchSMSConfiguration = ({\n  eventKey,\n  enabled\n}) => {\n  return Patch(`${urls.integrations.configurations.v2}/sms/${eventKey}`, {\n    enabled\n  });\n};\nexport const deleteSMSSubscriptions = (eventKey, subscriptionId) => {\n  return Delete(`${urls.integrations.configurations.v2}/sms/${eventKey}/subscriptions/${subscriptionId}`);\n};\nexport const putSMSSubscriptions = (subscriptionId, eventKey, data) => {\n  return Put(`${urls.integrations.configurations.v2}/sms/${eventKey}/subscriptions/${subscriptionId}`, data);\n};\nexport const deleteSMSConfiguration = eventKey => {\n  return Delete(`${urls.integrations.configurations.v2}/sms/${eventKey}`);\n};\nexport const getWebhooksConfigurations = () => {\n  return Get(urls.webhooks.v1);\n};\nexport const postWebhooksConfiguration = data => {\n  if (data._id) {\n    return Patch(`${urls.webhooks.v1}/${data._id}`, data);\n  } else {\n    return Post(`${urls.webhooks.v1}/custom`, data);\n  }\n};\nexport const deleteWebhooksConfiguration = id => {\n  return Delete(`${urls.webhooks.v1}/${id}`);\n};\nexport const getWebhookLog = (id, offset = 0, limit = 10) => {\n  const query = new URLSearchParams({\n    id,\n    offset: `${offset}`,\n    limit: `${limit}`\n  });\n  return Get(`${urls.webhooks.v1}/logs/?${query.toString()}`);\n};\nexport const postWebhookTest = data => {\n  return Post(`${urls.webhooks.v1}/test`, data);\n};\nexport const postWebhookRetry = id => {\n  return Post(`${urls.webhooks.v1}/logs/${id}/retries`);\n};\nexport const getCategories = () => {\n  return Get(`${urls.events.configurations.v1}/categories`);\n};\nexport const getChannelMaps = channels => {\n  return Get(urls.events.configurations.v1, {\n    channels\n  });\n};"]},"metadata":{},"sourceType":"module"}