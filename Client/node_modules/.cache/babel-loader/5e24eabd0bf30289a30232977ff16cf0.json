{"ast":null,"code":"import { authActions } from '@frontegg/redux-store';\nimport { AppHolder } from './AppHolder.js';\nimport { ContextHolder } from '@frontegg/rest-api';\n\nclass HostedLogin {\n  static setAuthentication(isAuthenticated, accessToken, user, appName = 'default') {\n    const app = AppHolder.getInstance(appName);\n\n    if (isAuthenticated && accessToken) {\n      ContextHolder.setAccessToken(accessToken);\n      ContextHolder.setUser(Object.assign(Object.assign({}, user), {\n        accessToken\n      }));\n      app.store.dispatch(authActions.setState({\n        isLoading: false,\n        isAuthenticated,\n        user\n      }));\n      app.store.dispatch(authActions.loadTenants());\n    } else {\n      ContextHolder.setAccessToken(null);\n      ContextHolder.setUser(null);\n      app.store.dispatch(authActions.setState({\n        isLoading: false,\n        isAuthenticated: false,\n        user: null\n      }));\n    }\n  }\n\n}\n\nexport { HostedLogin };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/admin-portal/HostedLogin.js"],"names":["authActions","AppHolder","ContextHolder","HostedLogin","setAuthentication","isAuthenticated","accessToken","user","appName","app","getInstance","setAccessToken","setUser","Object","assign","store","dispatch","setState","isLoading","loadTenants"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,WAAN,CAAkB;AACU,SAAjBC,iBAAiB,CAACC,eAAD,EAAkBC,WAAlB,EAA+BC,IAA/B,EAAqCC,OAAO,GAAG,SAA/C,EAA0D;AAC9E,UAAMC,GAAG,GAAGR,SAAS,CAACS,WAAV,CAAsBF,OAAtB,CAAZ;;AACA,QAAIH,eAAe,IAAIC,WAAvB,EAAoC;AAChCJ,MAAAA,aAAa,CAACS,cAAd,CAA6BL,WAA7B;AACAJ,MAAAA,aAAa,CAACU,OAAd,CAAsBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAlB,CAAd,EAAuC;AAAED,QAAAA;AAAF,OAAvC,CAAtB;AACAG,MAAAA,GAAG,CAACM,KAAJ,CAAUC,QAAV,CAAmBhB,WAAW,CAACiB,QAAZ,CAAqB;AACpCC,QAAAA,SAAS,EAAE,KADyB;AAEpCb,QAAAA,eAFoC;AAGpCE,QAAAA;AAHoC,OAArB,CAAnB;AAKAE,MAAAA,GAAG,CAACM,KAAJ,CAAUC,QAAV,CAAmBhB,WAAW,CAACmB,WAAZ,EAAnB;AACH,KATD,MAUK;AACDjB,MAAAA,aAAa,CAACS,cAAd,CAA6B,IAA7B;AACAT,MAAAA,aAAa,CAACU,OAAd,CAAsB,IAAtB;AACAH,MAAAA,GAAG,CAACM,KAAJ,CAAUC,QAAV,CAAmBhB,WAAW,CAACiB,QAAZ,CAAqB;AACpCC,QAAAA,SAAS,EAAE,KADyB;AAEpCb,QAAAA,eAAe,EAAE,KAFmB;AAGpCE,QAAAA,IAAI,EAAE;AAH8B,OAArB,CAAnB;AAKH;AACJ;;AAtBa;;AAyBlB,SAASJ,WAAT","sourcesContent":["import { authActions } from '@frontegg/redux-store';\nimport { AppHolder } from './AppHolder.js';\nimport { ContextHolder } from '@frontegg/rest-api';\n\nclass HostedLogin {\r\n    static setAuthentication(isAuthenticated, accessToken, user, appName = 'default') {\r\n        const app = AppHolder.getInstance(appName);\r\n        if (isAuthenticated && accessToken) {\r\n            ContextHolder.setAccessToken(accessToken);\r\n            ContextHolder.setUser(Object.assign(Object.assign({}, user), { accessToken }));\r\n            app.store.dispatch(authActions.setState({\r\n                isLoading: false,\r\n                isAuthenticated,\r\n                user,\r\n            }));\r\n            app.store.dispatch(authActions.loadTenants());\r\n        }\r\n        else {\r\n            ContextHolder.setAccessToken(null);\r\n            ContextHolder.setUser(null);\r\n            app.store.dispatch(authActions.setState({\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }));\r\n        }\r\n    }\r\n}\n\nexport { HostedLogin };\n"]},"metadata":{},"sourceType":"module"}