{"ast":null,"code":"import { auditsStoreName, bindActionCreators, auditsActions, auditLogsActions, auditLogsReducers, auditsMetadataActions, auditsMetadataReducers } from '@frontegg/redux-store';\nimport { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\n\nconst useAuditsState = stateMapper => {\n  return useSelector(state => {\n    var _a;\n\n    return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[auditsStoreName])) !== null && _a !== void 0 ? _a : state[auditsStoreName];\n  }, shallowEqual);\n};\n\nconst useAuditsActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(auditsActions, dispatch), [auditsActions]);\n};\n/**\r\n * hooks helpers\r\n */\n\n\nconst sliceReducerActionsBy = reducer => {\n  const reducerKeys = Object.keys(reducer);\n  const reducerActions = reducerKeys.map(key => ({\n    [key]: auditsActions[key]\n  }));\n  return reducerActions.reduce((p, n) => Object.assign(Object.assign({}, p), n), {});\n};\n\nconst stateHookGenerator = (stateMapper, subState) => {\n  return useSelector(state => {\n    var _a;\n\n    return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[auditsStoreName][subState])) !== null && _a !== void 0 ? _a : state[auditsStoreName][subState];\n  }, shallowEqual);\n};\n\nconst reducerActionsGenerator = (actions, reducers) => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(Object.assign(Object.assign({}, actions), sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\n};\n\nconst useAuditLogsState = stateMapper => stateHookGenerator(stateMapper, 'auditLogsState');\n\nconst useAuditLogsActions = () => reducerActionsGenerator(auditLogsActions, auditLogsReducers);\n\nconst useAuditsMetadataState = stateMapper => stateHookGenerator(stateMapper, 'auditsMetadataState');\n\nconst useAuditsMetadataActions = () => reducerActionsGenerator(auditsMetadataActions, auditsMetadataReducers);\n\nexport { useAuditsActions as a, useAuditLogsState as b, useAuditLogsActions as c, useAuditsMetadataState as d, useAuditsMetadataActions as e, useAuditsState as u };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/react-hooks/auditsMetadata-9ab88593.js"],"names":["auditsStoreName","bindActionCreators","auditsActions","auditLogsActions","auditLogsReducers","auditsMetadataActions","auditsMetadataReducers","useMemo","shallowEqual","u","useSelector","a","useDispatch","useAuditsState","stateMapper","state","_a","useAuditsActions","dispatch","sliceReducerActionsBy","reducer","reducerKeys","Object","keys","reducerActions","map","key","reduce","p","n","assign","stateHookGenerator","subState","reducerActionsGenerator","actions","reducers","useAuditLogsState","useAuditLogsActions","useAuditsMetadataState","useAuditsMetadataActions","b","c","d","e"],"mappings":"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","sourcesContent":["import { auditsStoreName, bindActionCreators, auditsActions, auditLogsActions, auditLogsReducers, auditsMetadataActions, auditsMetadataReducers } from '@frontegg/redux-store';\nimport { useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\n\nconst useAuditsState = (stateMapper) => {\r\n    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[auditsStoreName])) !== null && _a !== void 0 ? _a : state[auditsStoreName]; }, shallowEqual);\r\n};\r\nconst useAuditsActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(auditsActions, dispatch), [auditsActions]);\r\n};\r\n/**\r\n * hooks helpers\r\n */\r\nconst sliceReducerActionsBy = (reducer) => {\r\n    const reducerKeys = Object.keys(reducer);\r\n    const reducerActions = reducerKeys.map((key) => ({ [key]: auditsActions[key] }));\r\n    return reducerActions.reduce((p, n) => (Object.assign(Object.assign({}, p), n)), {});\r\n};\r\nconst stateHookGenerator = (stateMapper, subState) => {\r\n    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[auditsStoreName][subState])) !== null && _a !== void 0 ? _a : state[auditsStoreName][subState]; }, shallowEqual);\r\n};\r\nconst reducerActionsGenerator = (actions, reducers) => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(Object.assign(Object.assign({}, actions), sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\r\n};\n\nconst useAuditLogsState = (stateMapper) => stateHookGenerator(stateMapper, 'auditLogsState');\r\nconst useAuditLogsActions = () => reducerActionsGenerator(auditLogsActions, auditLogsReducers);\n\nconst useAuditsMetadataState = (stateMapper) => stateHookGenerator(stateMapper, 'auditsMetadataState');\r\nconst useAuditsMetadataActions = () => reducerActionsGenerator(auditsMetadataActions, auditsMetadataReducers);\n\nexport { useAuditsActions as a, useAuditLogsState as b, useAuditLogsActions as c, useAuditsMetadataState as d, useAuditsMetadataActions as e, useAuditsState as u };\n"]},"metadata":{},"sourceType":"module"}