{"ast":null,"code":"import { subscriptionsStoreName, bindActionCreators, subscriptionActions } from '@frontegg/redux-store';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { shallowEqual } from 'react-redux';\nimport { useMemo } from 'react';\n\nfunction getSubscriptionState(state) {\n  return state[subscriptionsStoreName];\n}\n\nconst usePaymentProvider = () => {\n  return useSelector(state => getSubscriptionState(state).config, shallowEqual);\n};\n\nconst usePaymentProviderActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.config, dispatch), [dispatch]);\n};\n\nconst usePlans = () => {\n  return useSelector(state => getSubscriptionState(state).plans, shallowEqual);\n};\n\nconst usePlansActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.plans, dispatch), [dispatch]);\n};\n\nconst useCheckout = () => {\n  return useSelector(state => getSubscriptionState(state).checkout, shallowEqual);\n};\n\nconst useCheckoutActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.checkout, dispatch), [dispatch]);\n};\n\nconst useBillingActions = billingKey => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.billing[billingKey], dispatch), [billingKey, dispatch]);\n};\n\nconst useBillingInformation = () => useSelector(state => getSubscriptionState(state).billing.information, shallowEqual);\n\nconst useBillingInformationActions = () => useBillingActions('information');\n\nconst usePaymentMethod = () => useSelector(state => getSubscriptionState(state).billing.paymentMethod, shallowEqual);\n\nconst usePaymentMethodActions = () => useBillingActions('paymentMethod');\n\nconst useInvoices = () => useSelector(state => getSubscriptionState(state).billing.invoices, shallowEqual);\n\nconst useInvoicesActions = () => useBillingActions('invoices');\n\nconst useStripeState = () => {\n  return useSelector(state => getSubscriptionState(state).stripe, shallowEqual);\n};\n\nconst useStripeActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.stripe, dispatch), [dispatch]);\n};\n\nconst useSubscriptionCancellation = () => {\n  return useSelector(state => getSubscriptionState(state).billing.subscription.cancellation, shallowEqual);\n};\n\nconst useSubscriptionRenewal = () => {\n  return useSelector(state => getSubscriptionState(state).billing.subscription.renewal, shallowEqual);\n};\n\nconst useSubscription = () => {\n  return useSelector(state => {\n    const {\n      billing: {\n        subscription\n      }\n    } = getSubscriptionState(state);\n    return subscription;\n  }, shallowEqual);\n};\n\nconst useSubscriptionActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.billing.subscription, dispatch), [dispatch]);\n};\n\nconst useVendorPublicConfig = () => {\n  return useSelector(state => {\n    const {\n      vendorPublicConfig\n    } = getSubscriptionState(state);\n    return vendorPublicConfig;\n  }, shallowEqual);\n};\n\nconst useVendorPublicConfigActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(subscriptionActions.vendorPublicConfig, dispatch), [dispatch]);\n};\n\nexport { usePaymentProviderActions as a, usePlans as b, usePlansActions as c, useCheckout as d, useCheckoutActions as e, useBillingInformation as f, useBillingInformationActions as g, usePaymentMethod as h, usePaymentMethodActions as i, useInvoices as j, useInvoicesActions as k, useStripeState as l, useStripeActions as m, useSubscriptionCancellation as n, useSubscriptionRenewal as o, useSubscription as p, useSubscriptionActions as q, useVendorPublicConfig as r, useVendorPublicConfigActions as s, usePaymentProvider as u };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/react-hooks/hooks-46ec08e7.js"],"names":["subscriptionsStoreName","bindActionCreators","subscriptionActions","u","useSelector","a","useDispatch","shallowEqual","useMemo","getSubscriptionState","state","usePaymentProvider","config","usePaymentProviderActions","dispatch","usePlans","plans","usePlansActions","useCheckout","checkout","useCheckoutActions","useBillingActions","billingKey","billing","useBillingInformation","information","useBillingInformationActions","usePaymentMethod","paymentMethod","usePaymentMethodActions","useInvoices","invoices","useInvoicesActions","useStripeState","stripe","useStripeActions","useSubscriptionCancellation","subscription","cancellation","useSubscriptionRenewal","renewal","useSubscription","useSubscriptionActions","useVendorPublicConfig","vendorPublicConfig","useVendorPublicConfigActions","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,kBAAjC,EAAqDC,mBAArD,QAAgF,uBAAhF;AACA,SAASC,CAAC,IAAIC,WAAd,EAA2BC,CAAC,IAAIC,WAAhC,QAAmD,oCAAnD;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACjC,SAAOA,KAAK,CAACV,sBAAD,CAAZ;AACH;;AACD,MAAMW,kBAAkB,GAAG,MAAM;AAC7B,SAAOP,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4BE,MAAxC,EAAgDL,YAAhD,CAAlB;AACH,CAFD;;AAGA,MAAMM,yBAAyB,GAAG,MAAM;AACpC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACU,MAArB,EAA6BE,QAA7B,CAAzB,EAAiE,CAACA,QAAD,CAAjE,CAAd;AACH,CAHD;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AACnB,SAAOX,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4BM,KAAxC,EAA+CT,YAA/C,CAAlB;AACH,CAFD;;AAGA,MAAMU,eAAe,GAAG,MAAM;AAC1B,QAAMH,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACc,KAArB,EAA4BF,QAA5B,CAAzB,EAAgE,CAACA,QAAD,CAAhE,CAAd;AACH,CAHD;;AAIA,MAAMI,WAAW,GAAG,MAAM;AACtB,SAAOd,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4BS,QAAxC,EAAkDZ,YAAlD,CAAlB;AACH,CAFD;;AAGA,MAAMa,kBAAkB,GAAG,MAAM;AAC7B,QAAMN,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACiB,QAArB,EAA+BL,QAA/B,CAAzB,EAAmE,CAACA,QAAD,CAAnE,CAAd;AACH,CAHD;;AAIA,MAAMO,iBAAiB,GAAIC,UAAD,IAAgB;AACtC,QAAMR,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACqB,OAApB,CAA4BD,UAA5B,CAAD,EAA0CR,QAA1C,CAAzB,EAA8E,CAACQ,UAAD,EAAaR,QAAb,CAA9E,CAAd;AACH,CAHD;;AAIA,MAAMU,qBAAqB,GAAG,MAAMpB,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4Ba,OAA5B,CAAoCE,WAAhD,EAA6DlB,YAA7D,CAA/C;;AACA,MAAMmB,4BAA4B,GAAG,MAAML,iBAAiB,CAAC,aAAD,CAA5D;;AACA,MAAMM,gBAAgB,GAAG,MAAMvB,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4Ba,OAA5B,CAAoCK,aAAhD,EAA+DrB,YAA/D,CAA1C;;AACA,MAAMsB,uBAAuB,GAAG,MAAMR,iBAAiB,CAAC,eAAD,CAAvD;;AACA,MAAMS,WAAW,GAAG,MAAM1B,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4Ba,OAA5B,CAAoCQ,QAAhD,EAA0DxB,YAA1D,CAArC;;AACA,MAAMyB,kBAAkB,GAAG,MAAMX,iBAAiB,CAAC,UAAD,CAAlD;;AACA,MAAMY,cAAc,GAAG,MAAM;AACzB,SAAO7B,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4BwB,MAAxC,EAAgD3B,YAAhD,CAAlB;AACH,CAFD;;AAGA,MAAM4B,gBAAgB,GAAG,MAAM;AAC3B,QAAMrB,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACgC,MAArB,EAA6BpB,QAA7B,CAAzB,EAAiE,CAACA,QAAD,CAAjE,CAAd;AACH,CAHD;;AAIA,MAAMsB,2BAA2B,GAAG,MAAM;AACtC,SAAOhC,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4Ba,OAA5B,CAAoCc,YAApC,CAAiDC,YAA7D,EAA2E/B,YAA3E,CAAlB;AACH,CAFD;;AAGA,MAAMgC,sBAAsB,GAAG,MAAM;AACjC,SAAOnC,WAAW,CAAEM,KAAD,IAAWD,oBAAoB,CAACC,KAAD,CAApB,CAA4Ba,OAA5B,CAAoCc,YAApC,CAAiDG,OAA7D,EAAsEjC,YAAtE,CAAlB;AACH,CAFD;;AAGA,MAAMkC,eAAe,GAAG,MAAM;AAC1B,SAAOrC,WAAW,CAAEM,KAAD,IAAW;AAC1B,UAAM;AAAEa,MAAAA,OAAO,EAAE;AAAEc,QAAAA;AAAF;AAAX,QAAiC5B,oBAAoB,CAACC,KAAD,CAA3D;AACA,WAAO2B,YAAP;AACH,GAHiB,EAGf9B,YAHe,CAAlB;AAIH,CALD;;AAMA,MAAMmC,sBAAsB,GAAG,MAAM;AACjC,QAAM5B,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAACqB,OAApB,CAA4Bc,YAA7B,EAA2CvB,QAA3C,CAAzB,EAA+E,CAACA,QAAD,CAA/E,CAAd;AACH,CAHD;;AAIA,MAAM6B,qBAAqB,GAAG,MAAM;AAChC,SAAOvC,WAAW,CAAEM,KAAD,IAAW;AAC1B,UAAM;AAAEkC,MAAAA;AAAF,QAAyBnC,oBAAoB,CAACC,KAAD,CAAnD;AACA,WAAOkC,kBAAP;AACH,GAHiB,EAGfrC,YAHe,CAAlB;AAIH,CALD;;AAMA,MAAMsC,4BAA4B,GAAG,MAAM;AACvC,QAAM/B,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOE,OAAO,CAAC,MAAMP,kBAAkB,CAACC,mBAAmB,CAAC0C,kBAArB,EAAyC9B,QAAzC,CAAzB,EAA6E,CAACA,QAAD,CAA7E,CAAd;AACH,CAHD;;AAKA,SAASD,yBAAyB,IAAIR,CAAtC,EAAyCU,QAAQ,IAAI+B,CAArD,EAAwD7B,eAAe,IAAI8B,CAA3E,EAA8E7B,WAAW,IAAI8B,CAA7F,EAAgG5B,kBAAkB,IAAI6B,CAAtH,EAAyHzB,qBAAqB,IAAI0B,CAAlJ,EAAqJxB,4BAA4B,IAAIyB,CAArL,EAAwLxB,gBAAgB,IAAIyB,CAA5M,EAA+MvB,uBAAuB,IAAIwB,CAA1O,EAA6OvB,WAAW,IAAIwB,CAA5P,EAA+PtB,kBAAkB,IAAIuB,CAArR,EAAwRtB,cAAc,IAAIuB,CAA1S,EAA6SrB,gBAAgB,IAAIsB,CAAjU,EAAoUrB,2BAA2B,IAAIsB,CAAnW,EAAsWnB,sBAAsB,IAAIoB,CAAhY,EAAmYlB,eAAe,IAAImB,CAAtZ,EAAyZlB,sBAAsB,IAAImB,CAAnb,EAAsblB,qBAAqB,IAAImB,CAA/c,EAAkdjB,4BAA4B,IAAIkB,CAAlf,EAAqfpD,kBAAkB,IAAIR,CAA3gB","sourcesContent":["import { subscriptionsStoreName, bindActionCreators, subscriptionActions } from '@frontegg/redux-store';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { shallowEqual } from 'react-redux';\nimport { useMemo } from 'react';\n\nfunction getSubscriptionState(state) {\r\n    return state[subscriptionsStoreName];\r\n}\r\nconst usePaymentProvider = () => {\r\n    return useSelector((state) => getSubscriptionState(state).config, shallowEqual);\r\n};\r\nconst usePaymentProviderActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.config, dispatch), [dispatch]);\r\n};\r\nconst usePlans = () => {\r\n    return useSelector((state) => getSubscriptionState(state).plans, shallowEqual);\r\n};\r\nconst usePlansActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.plans, dispatch), [dispatch]);\r\n};\r\nconst useCheckout = () => {\r\n    return useSelector((state) => getSubscriptionState(state).checkout, shallowEqual);\r\n};\r\nconst useCheckoutActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.checkout, dispatch), [dispatch]);\r\n};\r\nconst useBillingActions = (billingKey) => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.billing[billingKey], dispatch), [billingKey, dispatch]);\r\n};\r\nconst useBillingInformation = () => useSelector((state) => getSubscriptionState(state).billing.information, shallowEqual);\r\nconst useBillingInformationActions = () => useBillingActions('information');\r\nconst usePaymentMethod = () => useSelector((state) => getSubscriptionState(state).billing.paymentMethod, shallowEqual);\r\nconst usePaymentMethodActions = () => useBillingActions('paymentMethod');\r\nconst useInvoices = () => useSelector((state) => getSubscriptionState(state).billing.invoices, shallowEqual);\r\nconst useInvoicesActions = () => useBillingActions('invoices');\r\nconst useStripeState = () => {\r\n    return useSelector((state) => getSubscriptionState(state).stripe, shallowEqual);\r\n};\r\nconst useStripeActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.stripe, dispatch), [dispatch]);\r\n};\r\nconst useSubscriptionCancellation = () => {\r\n    return useSelector((state) => getSubscriptionState(state).billing.subscription.cancellation, shallowEqual);\r\n};\r\nconst useSubscriptionRenewal = () => {\r\n    return useSelector((state) => getSubscriptionState(state).billing.subscription.renewal, shallowEqual);\r\n};\r\nconst useSubscription = () => {\r\n    return useSelector((state) => {\r\n        const { billing: { subscription }, } = getSubscriptionState(state);\r\n        return subscription;\r\n    }, shallowEqual);\r\n};\r\nconst useSubscriptionActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.billing.subscription, dispatch), [dispatch]);\r\n};\r\nconst useVendorPublicConfig = () => {\r\n    return useSelector((state) => {\r\n        const { vendorPublicConfig } = getSubscriptionState(state);\r\n        return vendorPublicConfig;\r\n    }, shallowEqual);\r\n};\r\nconst useVendorPublicConfigActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(subscriptionActions.vendorPublicConfig, dispatch), [dispatch]);\r\n};\n\nexport { usePaymentProviderActions as a, usePlans as b, usePlansActions as c, useCheckout as d, useCheckoutActions as e, useBillingInformation as f, useBillingInformationActions as g, usePaymentMethod as h, usePaymentMethodActions as i, useInvoices as j, useInvoicesActions as k, useStripeState as l, useStripeActions as m, useSubscriptionCancellation as n, useSubscriptionRenewal as o, useSubscription as p, useSubscriptionActions as q, useVendorPublicConfig as r, useVendorPublicConfigActions as s, usePaymentProvider as u };\n"]},"metadata":{},"sourceType":"module"}