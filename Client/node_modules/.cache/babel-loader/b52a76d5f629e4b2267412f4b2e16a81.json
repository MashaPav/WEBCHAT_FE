{"ast":null,"code":"var _jsxFileName = \"/Users/mashapav/Downloads/WEB-CHAT/Client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Messages } from './Messages';\nimport { Pane, Panes, Footer } from './Panes';\nimport { Chats } from './Chats'; // import './App.css';\n\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { useAuth, useLoginWithRedirect } from \"@frontegg/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst handleLogout = () => {\n  // window.location.href = 'https:///mashatest.frontegg.com/oauth/logout?post_logout_redirect_uri=https://www.google.com'\n  // logout(() => {window.location.href = 'https://mashatest.frontegg.com/oauth/logout?post_logout_redirect_uri=google.com'});\n  // silentLogout();\n  // logout()\n  const baseUrl = ContextHolder.getContext().baseUrl;\n  window.location.href = `${baseUrl}/oauth/logout?post_logout_redirect_uri=${window.location}`;\n};\n\nexport function App() {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const loginWithRedirect = useLoginWithRedirect();\n  let [chats, setChats] = useState([]);\n  let [chatId, setChatId] = useState(null);\n  let [messages, setMessages] = useState([]);\n  let [lastPoll, setLastPoll] = useState(Date.now());\n  useEffect(loadChats, []);\n  useEffect(loadMessages, [chatId, lastPoll]);\n  useEffect(startTimer, [lastPoll]);\n  let selectedChat = chats.find(p => p.id === chatId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user === null || user === void 0 ? void 0 : user.profilePictureUrl,\n            alt: user === null || user === void 0 ? void 0 : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Logged in as: \", user === null || user === void 0 ? void 0 : user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert(user.accessToken),\n            children: \"What is my access token?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Panes, {\n        children: [/*#__PURE__*/_jsxDEV(Pane, {\n          width: '35%',\n          minWidth: '300px',\n          header: `All Chats (lastPoll: ${lastPoll})`,\n          body: /*#__PURE__*/_jsxDEV(Chats, {\n            chats: chats,\n            onSelectChat: setChatId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Pane, {\n          width: '65%',\n          header: `${selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.users.map(user => user.name).join(', ')} (${selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id})`,\n          body: /*#__PURE__*/_jsxDEV(Messages, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this),\n          lastScroll: lastPoll,\n          footer: /*#__PURE__*/_jsxDEV(Input, {\n            onSubmit: onNewMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loginWithRedirect(),\n        children: \"Click me to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  function onNewMessage(e) {\n    e.preventDefault();\n    alert(`Sending to the server: ${e.target.newMessage.value}`);\n  }\n\n  function loadChats() {\n    import('./data/chats.js').then(module => {\n      let chats = module.chats;\n      setChats(chats);\n      setChatId(chats[0].id);\n    });\n  }\n\n  function loadMessages() {\n    if (!chatId) {\n      return;\n    }\n\n    import(`./data/messages_${chatId}.js`).then(module => {\n      let messages = module.messages;\n      setMessages(addFakeMessage(messages));\n    });\n  }\n\n  function startTimer() {\n    setTimeout(() => {\n      setLastPoll(Date.now());\n    }, 5000);\n  }\n}\n\n_s(App, \"JgwgRJYsaUZ6fDgYd7j8JUZtr4U=\", false, function () {\n  return [useAuth, useLoginWithRedirect];\n});\n\n_c = App;\n\nfunction addFakeMessage(messages) {\n  let messageBeforeLast = messages[messages.length - 2];\n  let newMessage = { ...messageBeforeLast,\n    id: Date.now()\n  };\n  messages.push(newMessage);\n  return messages;\n}\n\nfunction Input() {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: 'test'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Input;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/src/App.jsx"],"names":["React","useEffect","useState","Messages","Pane","Panes","Footer","Chats","ContextHolder","useAuth","useLoginWithRedirect","handleLogout","baseUrl","getContext","window","location","href","App","user","isAuthenticated","loginWithRedirect","chats","setChats","chatId","setChatId","messages","setMessages","lastPoll","setLastPoll","Date","now","loadChats","loadMessages","startTimer","selectedChat","find","p","id","profilePictureUrl","name","alert","accessToken","users","map","join","onNewMessage","e","preventDefault","target","newMessage","value","then","module","addFakeMessage","setTimeout","messageBeforeLast","length","push","Input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Messages } from './Messages';\nimport { Pane, Panes, Footer } from './Panes';\nimport { Chats } from './Chats';\n// import './App.css';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { useAuth, useLoginWithRedirect } from \"@frontegg/react\";\n\nconst handleLogout = () => {\n  // window.location.href = 'https:///mashatest.frontegg.com/oauth/logout?post_logout_redirect_uri=https://www.google.com'\n\n  // logout(() => {window.location.href = 'https://mashatest.frontegg.com/oauth/logout?post_logout_redirect_uri=google.com'});\n  // silentLogout();\n  // logout()\n  const baseUrl = ContextHolder.getContext().baseUrl;\n  window.location.href = `${baseUrl}/oauth/logout?post_logout_redirect_uri=${window.location}`;\n};\n\nexport function App() {\n  const { user, isAuthenticated } = useAuth();\n  const loginWithRedirect = useLoginWithRedirect();\n\n  let [chats, setChats] = useState([]);\n  let [chatId, setChatId] = useState(null);\n  let [messages, setMessages] = useState([]);\n  let [lastPoll, setLastPoll] = useState(Date.now());\n\n  useEffect(loadChats, []);\n  useEffect(loadMessages, [chatId, lastPoll]);\n  useEffect(startTimer, [lastPoll]);\n\n  let selectedChat = chats.find((p) => p.id === chatId);\n\n  return (\n    <div className=\"App\">\n      { isAuthenticated ? (\n        <><div>\n          <div>\n            <img src={user?.profilePictureUrl} alt={user?.name} />\n          </div>\n          <div>\n            <span>Logged in as: {user?.name}</span>\n          </div>\n          <div>\n            <button onClick={() => alert(user.accessToken)}>What is my access token?</button>\n          </div>\n          \n        </div>\n        <Panes>\n            <Pane width={'35%'} minWidth={'300px'}\n              header={`All Chats (lastPoll: ${lastPoll})`}\n              body={<Chats chats={chats} onSelectChat={setChatId}></Chats>}>\n            </Pane>\n            <Pane width={'65%'}\n              header={`${selectedChat?.users.map(user => user.name).join(', ')} (${selectedChat?.id})`}\n              body={<Messages messages={messages}></Messages>}\n              lastScroll={lastPoll}\n              footer={<Input onSubmit={onNewMessage}></Input>}>\n            </Pane>\n        </Panes></>\n      ) : (\n        <div>\n          <button onClick={() => loginWithRedirect()}>Click me to login</button>\n        </div>\n      )}\n    </div>\n  );\n\n  function onNewMessage(e) {\n    e.preventDefault();\n    alert(`Sending to the server: ${e.target.newMessage.value}`);\n  }\n\n  function loadChats() {\n    import('./data/chats.js')\n      .then(module => {\n        let chats = module.chats;\n        setChats(chats);\n        setChatId(chats[0].id);\n      });\n  }\n\n  function loadMessages() {\n    if (!chatId) {\n      return;\n    }\n    import(`./data/messages_${chatId}.js`)\n      .then((module) => {\n        let messages = module.messages;\n        setMessages(addFakeMessage(messages));\n      })\n  }\n\n  function startTimer() {\n    setTimeout(() => {\n      setLastPoll(Date.now());\n    }, 5000);\n  }\n}\n\nfunction addFakeMessage(messages) {\n  let messageBeforeLast = messages[messages.length - 2];\n  let newMessage = {...messageBeforeLast, id: Date.now()};\n  messages.push(newMessage);\n  return messages;\n}\n\nfunction Input() {\n  return <form>\n      <label>\n        Name:\n        <input type=\"text\" value={'test'} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}