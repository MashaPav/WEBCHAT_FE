{"ast":null,"code":"import { c as connectivityStoreName } from '../constants-4d9682b2.js';\nexport { c as connectivityStoreName } from '../constants-4d9682b2.js';\nimport { createAction, createSlice } from '@reduxjs/toolkit';\nimport { __rest } from 'tslib';\nimport { takeEvery, takeLatest, put, all, call, select } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nconst initialState$1 = {\n  isLoading: false,\n  isSaving: false,\n  list: [],\n  processIds: [],\n  slackChannels: {\n    isLoading: false\n  }\n};\nconst reducers = {\n  initData: () => Object.assign({}, initialState$1),\n  // Deprecated: use initData instead;\n  // cleanData: () => ({ ...initialState }),\n  setConnectivityState: (state, {\n    payload\n  }) => Object.assign(Object.assign({}, state), payload),\n  cleanWebhookTestData: state => Object.assign(Object.assign({}, state), {\n    testResult: undefined\n  }),\n  cleanWebhookLogsData: state => Object.assign(Object.assign({}, state), {\n    webhookLogs: undefined\n  }),\n  cleanWebhookTestMessage: state => {\n    var _a;\n\n    return Object.assign(Object.assign({}, state), {\n      testResult: {\n        status: (_a = state.testResult) === null || _a === void 0 ? void 0 : _a.status,\n        message: undefined\n      }\n    });\n  },\n  cleanError: state => Object.assign(Object.assign({}, state), {\n    error: undefined\n  }),\n  cleanSlackData: state => Object.assign(Object.assign({}, state), {\n    slackChannels: {\n      isLoading: false\n    }\n  }),\n  postWebhookRetryAction: {\n    prepare: logId => ({\n      payload: logId\n    }),\n    reducer: (state, {\n      payload\n    }) => Object.assign(Object.assign({}, state), {\n      retryResult: Object.assign(Object.assign({}, state.retryResult), {\n        [payload]: {\n          isProcess: true,\n          success: false\n        }\n      })\n    })\n  },\n  postWebhookRetryResult: {\n    prepare: payload => ({\n      payload\n    }),\n    reducer: (state, {\n      payload\n    }) => Object.assign(Object.assign({}, state), {\n      retryResult: Object.assign(Object.assign({}, state.retryResult), payload)\n    })\n  }\n};\nconst actions$1 = {\n  loadSlackActions: createAction(`${connectivityStoreName}/loadSlackActions`),\n  loadDataAction: createAction(`${connectivityStoreName}/loadDataAction`, payload => ({\n    payload\n  })),\n  postDataAction: createAction(`${connectivityStoreName}/postDataAction`, payload => ({\n    payload\n  })),\n  postCodeAction: createAction(`${connectivityStoreName}/postCodeAction`, payload => ({\n    payload\n  })),\n  loadScope: createAction(`${connectivityStoreName}/loadScope`),\n  deleteWebhookConfigAction: createAction(`${connectivityStoreName}/deleteWebhookConfigAction`, payload => ({\n    payload\n  })),\n  postWebhookTestAction: createAction(`${connectivityStoreName}/postWebhookTestAction`, payload => ({\n    payload\n  })),\n  loadWebhookLogsAction: createAction(`${connectivityStoreName}/loadWebhookLogsAction`, (id, offset = 0, limit = 10) => ({\n    payload: {\n      id,\n      offset,\n      limit\n    }\n  }))\n};\nconst initialState = {\n  isLoading: false,\n  isSaving: false,\n  list: [],\n  processIds: [],\n  slackChannels: {\n    isLoading: false\n  }\n};\nconst {\n  reducer,\n  actions: sliceActions\n} = createSlice({\n  name: connectivityStoreName,\n  initialState,\n  reducers: Object.assign({}, reducers)\n});\nconst actions = Object.assign(Object.assign({}, sliceActions), actions$1);\nconst type2ApiGet = {\n  slack: api.connectivity.getSlackConfiguration,\n  email: api.connectivity.getEmailConfiguration,\n  sms: api.connectivity.getSMSConfiguration,\n  webhook: api.connectivity.getWebhooksConfigurations,\n  categories: api.connectivity.getCategories,\n  channelMap: api.connectivity.getChannelMaps\n};\nconst type2ApiPost = {\n  slack: api.connectivity.postSlackConfiguration,\n  email: api.connectivity.postEmailConfiguration,\n  sms: api.connectivity.postSMSConfiguration,\n  webhook: api.connectivity.postWebhooksConfiguration\n};\nconst channels = ['email', 'slack', 'sms', 'webhook'];\nconst channels2Platform = {\n  sms: {\n    title: 'connectivity.sms',\n    events: data => {\n      var _a;\n\n      return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0;\n    },\n    isActive: data => {\n      var _a, _b;\n\n      return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({\n        enabled\n      }) => enabled)) !== null && _b !== void 0 ? _b : false;\n    },\n    image: 'sms'\n  },\n  email: {\n    title: 'common.email',\n    events: data => {\n      var _a;\n\n      return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0;\n    },\n    isActive: data => {\n      var _a, _b;\n\n      return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({\n        enabled\n      }) => enabled)) !== null && _b !== void 0 ? _b : false;\n    },\n    image: 'email'\n  },\n  slack: {\n    title: 'connectivity.slack',\n    events: data => {\n      var _a, _b;\n\n      return ((_b = (_a = data) === null || _a === void 0 ? void 0 : _a.slackSubscriptions) === null || _b === void 0 ? void 0 : _b.length) || 0;\n    },\n    isActive: data => {\n      var _a, _b;\n\n      return (_b = !!((_a = data) === null || _a === void 0 ? void 0 : _a.slackSubscriptions.some(({\n        isActive\n      }) => isActive))) !== null && _b !== void 0 ? _b : false;\n    },\n    image: 'slack'\n  },\n  webhook: {\n    title: 'connectivity.webhook',\n    events: data => {\n      var _a;\n\n      return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0;\n    },\n    isActive: data => {\n      var _a, _b;\n\n      return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({\n        isActive\n      }) => isActive)) !== null && _b !== void 0 ? _b : false;\n    },\n    image: 'webhook'\n  }\n};\nconst addApi = ['categories', 'channelMap'];\n\nfunction* loadPlatromData(ch) {\n  return yield loadFunction({\n    payload: {\n      api: ch\n    },\n    type: ''\n  });\n}\n\nfunction* loadDataFunction({\n  payload = channels\n}) {\n  yield put(actions.setConnectivityState({\n    isLoading: true\n  }));\n\n  try {\n    const values = yield all([...payload.map(loadPlatromData), yield loadFunction({\n      payload: {\n        api: 'categories'\n      },\n      type: ''\n    }), yield function* () {\n      const res = yield all(payload.map(function* (ch) {\n        return yield loadFunction({\n          payload: {\n            api: 'channelMap',\n            params: ch\n          },\n          type: ''\n        });\n      }));\n      return res.reduce((acc, curr, idx) => Object.assign(Object.assign({}, acc), {\n        [`${payload[idx]}`]: curr\n      }), {});\n    }()]);\n    const webhooks = yield loadFunction({\n      payload: {\n        api: 'webhook'\n      },\n      type: ''\n    });\n    const data = values.reduce((acc, curr, idx) => payload[idx] ? values[values.length - 1][payload[idx]].length ? Object.assign(Object.assign({}, acc), {\n      [`${payload[idx]}`]: curr,\n      list: [...acc.list, {\n        id: idx,\n        key: payload[idx],\n        events: channels2Platform[payload[idx]].events(curr),\n        active: channels2Platform[payload[idx]].isActive(curr),\n        platform: channels2Platform[payload[idx]].title,\n        image: channels2Platform[payload[idx]].image\n      }]\n    }) : acc : Object.assign(Object.assign({}, acc), {\n      [`${addApi[idx - payload.length]}`]: curr\n    }), {\n      list: [],\n      webhook: webhooks\n    });\n    yield put(actions.setConnectivityState(Object.assign(Object.assign({}, data), {\n      error: undefined,\n      isSaving: false,\n      isLoading: false\n    })));\n  } catch (e) {\n    yield put(actions.setConnectivityState({\n      isLoading: false\n    }));\n  }\n}\n\nfunction* loadFunction({\n  payload: {\n    api,\n    params\n  }\n}) {\n  try {\n    return yield call(type2ApiGet[api], params);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction* loadSlackFunction() {\n  try {\n    yield put(actions.setConnectivityState({\n      slackChannels: {\n        isLoading: true\n      }\n    }));\n    const data = yield call(api.connectivity.getSlackChannels);\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      slackChannels: {\n        isLoading: false,\n        data\n      }\n    }));\n  } catch (e) {\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      slackChannels: {\n        isLoading: false\n      }\n    }));\n  }\n}\n\nfunction* checkNewStatus(platform, data) {\n  const {\n    connectivity: {\n      list\n    }\n  } = yield select();\n  const currPlatform = list.find(({\n    key\n  }) => key === platform);\n  if (!currPlatform) return;\n  const newActive = channels2Platform[platform].isActive(data);\n  if (newActive === currPlatform.active) return; //TODO: double check\n\n  yield put(actions.setConnectivityState({\n    list: list.map(elm => elm.key === platform ? Object.assign(Object.assign({}, elm), {\n      active: newActive\n    }) : elm)\n  }));\n}\n\nfunction* postDataFunction({\n  payload: {\n    platform,\n    data,\n    callback\n  }\n}) {\n  var _a;\n\n  const {\n    processIds\n  } = yield select(state => state.connectivity);\n\n  try {\n    yield put(actions.setConnectivityState({\n      isSaving: true,\n      //@ts-ignore\n      processIds: platform === 'webhook' ? [data._id, ...processIds] : processIds\n    }));\n\n    if (platform === 'slack') {\n      yield postSlackData({\n        payload: data,\n        type: ''\n      });\n    } else if (['sms', 'email'].includes(platform)) {\n      yield postEmailSMSData({\n        payload: data,\n        type: platform\n      });\n    } else {\n      yield call(type2ApiPost[platform], data);\n    }\n\n    if (!['sms', 'email'].includes(platform)) {\n      const newData = yield loadFunction({\n        payload: {\n          api: platform\n        },\n        type: ''\n      });\n\n      if (platform === 'webhook') {\n        newData.id = data._id;\n      }\n\n      yield put(actions.setConnectivityState({\n        error: undefined,\n        isSaving: false,\n        [`${platform}`]: newData,\n        processIds: newData.id ? processIds.filter(el => el !== newData.id) : processIds\n      }));\n      yield checkNewStatus(platform, newData);\n      callback === null || callback === void 0 ? void 0 : callback(true);\n    }\n  } catch (e) {\n    yield put(actions.setConnectivityState({\n      error: (_a = e.message) !== null && _a !== void 0 ? _a : e.toString(),\n      isSaving: false,\n      isLoading: false\n    }));\n  }\n}\n\nfunction* postSlackData({\n  payload\n}) {\n  const {\n    connectivity: {\n      slack\n    }\n  } = yield select();\n\n  if (!slack) {\n    return;\n  }\n\n  const {\n    slackSubscriptions: stateSlackSubscriptions\n  } = slack;\n  const {\n    slackSubscriptions\n  } = payload;\n  yield all([...slackSubscriptions.reduce((acc, curr) => {\n    var _a, _b;\n\n    if (!curr.id && curr.slackEvents && ((_a = curr.slackEvents[0].channelIds) === null || _a === void 0 ? void 0 : _a.length)) {\n      return [...acc, curr];\n    }\n\n    const el = stateSlackSubscriptions === null || stateSlackSubscriptions === void 0 ? void 0 : stateSlackSubscriptions.find(_a => {\n      var {\n        id\n      } = _a,\n          props = __rest(_a, [\"id\"]);\n\n      return id === curr.id && JSON.stringify(Object.assign({\n        id\n      }, props)) !== JSON.stringify(curr);\n    });\n\n    if (el && curr.slackEvents && ((_b = curr.slackEvents[0].channelIds) === null || _b === void 0 ? void 0 : _b.length)) {\n      return [...acc, curr];\n    }\n\n    return acc;\n  }, []).map(function* (el) {\n    return yield call(type2ApiPost.slack, el);\n  }), ...slackSubscriptions.reduce((acc, curr) => {\n    if (curr.id && !curr.slackEvents[0].channelIds.length) {\n      return [...acc, curr];\n    }\n\n    return acc;\n  }, []).map(function* (el) {\n    return yield call(api.connectivity.deleteSlackConfiguration, el);\n  })]);\n}\n\nfunction* postEmailSMSData({\n  payload,\n  type\n}) {\n  const {\n    connectivity\n  } = yield select();\n  const {\n    processIds\n  } = yield select(state => state.connectivity);\n  const stateData = connectivity[type];\n  if (!stateData) return;\n  let actionsResult = [];\n\n  try {\n    actionsResult = yield all([// create new\n    ...payload.reduce((acc, curr) => {\n      const state = stateData.find(({\n        eventKey\n      }) => eventKey === curr.eventKey);\n\n      if (!state && curr.subscriptions[0].recipients.filter(el => el).length) {\n        return [...acc, curr];\n      }\n\n      return acc;\n    }, []).map(function* (data) {\n      return yield call(type === 'email' ? api.connectivity.postEmailConfiguration : api.connectivity.postSMSConfiguration, data);\n    }), // update exists\n    ...payload.reduce((acc, curr) => {\n      const state = stateData.find(({\n        eventKey\n      }) => eventKey === curr.eventKey);\n\n      if (state && JSON.stringify(state) !== JSON.stringify(curr)) {\n        return [...acc, curr];\n      }\n\n      return acc;\n    }, []).map(function* (data) {\n      const {\n        subscriptions,\n        eventKey\n      } = data;\n\n      const _a = subscriptions[0],\n            {\n        id = '',\n        enabled\n      } = _a,\n            body = __rest(_a, [\"id\", \"enabled\"]);\n\n      return yield all([yield call(type === 'email' ? api.connectivity.patchEmailConfiguration : api.connectivity.patchSMSConfiguration, {\n        eventKey,\n        enabled\n      }), yield call(type === 'email' ? api.connectivity.putEmailSubscriptions : api.connectivity.putSMSSubscriptions, id, eventKey, Object.assign(Object.assign({}, body), {\n        enabled\n      }))]);\n    }), // delete record with empty recipients\n    ...payload.reduce((acc, curr) => {\n      const state = stateData.find(({\n        eventKey\n      }) => eventKey === curr.eventKey);\n\n      if (state && state.subscriptions[0].recipients.length && !curr.subscriptions[0].recipients.filter(el => !!el).length) {\n        return [...acc, curr];\n      }\n\n      return acc;\n    }, []).map(function* ({\n      eventKey,\n      subscriptions\n    }) {\n      return call(type === 'email' ? api.connectivity.deleteEmailSubscriptions : api.connectivity.deleteSMSSubscriptions, eventKey, subscriptions[0].id || '');\n    })]);\n  } catch (_a) {}\n\n  if (actionsResult.length) {\n    const newData = yield loadFunction({\n      payload: {\n        api: type\n      },\n      type: ''\n    }); // yield put(connectivityActions.postDataSuccess({ platform: type, data: newData }));\n\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      isSaving: false,\n      [`${type}`]: newData,\n      processIds: newData.id ? processIds.filter(el => el !== newData.id) : processIds\n    }));\n    yield checkNewStatus(type, newData);\n  } else {\n    // yield put(connectivityActions.postDataSuccess({ platform: type, data: stateData }));\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      isSaving: false,\n      [`${type}`]: stateData,\n      processIds: processIds\n    }));\n  }\n}\n\nfunction* postCodeFunction({\n  payload\n}) {\n  try {\n    yield api.connectivity.postSlackCode(payload);\n  } catch (_a) {} // yield put(connectivityActions.postCodeSuccess());\n\n\n  yield put(actions.setConnectivityState({\n    error: undefined,\n    isSaving: false\n  }));\n}\n\nfunction* loadSlackPermissions() {\n  const {\n    slackChannels\n  } = yield select(state => state.connectivity);\n\n  try {\n    yield put(actions.setConnectivityState({\n      slackChannels: Object.assign(Object.assign({}, slackChannels), {\n        isLoadingScope: true\n      })\n    }));\n    const {\n      clientId\n    } = yield call(api.connectivity.getSlackScope); // yield put(connectivityActions.loadScopeSuccess(clientId));\n\n    yield put(actions.setConnectivityState({\n      slackChannels: {\n        error: undefined,\n        clientId,\n        isLoadingScope: false,\n        isLoading: false\n      }\n    }));\n  } catch (_a) {\n    // yield put(connectivityActions.loadScopeSuccess(null));\n    yield put(actions.setConnectivityState({\n      slackChannels: {\n        error: undefined,\n        isLoadingScope: false,\n        isLoading: false\n      }\n    }));\n  }\n}\n\nfunction* deleteWebhookConfigFunction({\n  payload\n}) {\n  const {\n    callback,\n    webhookId\n  } = payload;\n  const {\n    processIds\n  } = yield select(state => state.connectivity);\n\n  try {\n    yield put(actions.setConnectivityState({\n      isSaving: true\n    }));\n    yield call(api.connectivity.deleteWebhooksConfiguration, webhookId);\n  } catch (e) {\n    callback === null || callback === void 0 ? void 0 : callback(null, e.message);\n  }\n\n  const newData = yield loadFunction({\n    payload: {\n      api: 'webhook'\n    },\n    type: ''\n  });\n\n  if (newData) {\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      isSaving: false,\n      webhook: newData,\n      processIds: newData.id ? processIds.filter(el => el !== newData.id) : processIds\n    }));\n  }\n\n  callback === null || callback === void 0 ? void 0 : callback(true);\n}\n\nfunction* postWebhookTestFunction({\n  payload\n}) {\n  try {\n    yield put(actions.setConnectivityState({\n      isTesting: true\n    }));\n    const {\n      statusCode,\n      body\n    } = yield call(api.connectivity.postWebhookTest, payload);\n\n    if ([201, 200].includes(statusCode)) {\n      // yield put(connectivityActions.postWebhookTestSuccess('success', JSON.stringify(body, null, 2)));\n      const message = JSON.stringify(body, null, 2);\n      yield put(actions.setConnectivityState({\n        isTesting: false,\n        testResult: {\n          status: 'success',\n          message\n        }\n      }));\n    } else {\n      // yield put(connectivityActions.postWebhookTestSuccess('failed', body.toString()));\n      yield put(actions.setConnectivityState({\n        isTesting: false,\n        testResult: {\n          status: 'failed'\n        }\n      }));\n    }\n  } catch (e) {\n    // yield put(connectivityActions.postWebhookTestSuccess('failed', e.toString()));\n    yield put(actions.setConnectivityState({\n      isTesting: false,\n      testResult: {\n        status: 'failed',\n        message: e.toString()\n      }\n    }));\n  }\n}\n\nfunction* postWebhookRetryFunction({\n  payload\n}) {\n  try {\n    const {\n      statusCode\n    } = yield call(api.connectivity.postWebhookRetry, payload);\n    yield put(actions.postWebhookRetryResult({\n      [payload]: {\n        isProcess: false,\n        success: statusCode === 202\n      }\n    }));\n  } catch (e) {\n    yield put(actions.postWebhookRetryResult({\n      [payload]: {\n        isProcess: false,\n        success: false\n      }\n    }));\n  }\n}\n\nfunction* loadWebhookLogsFunction({\n  payload: {\n    id,\n    limit,\n    offset\n  }\n}) {\n  const {\n    webhookLogs\n  } = yield select(state => state.connectivity);\n\n  try {\n    yield put(actions.setConnectivityState({\n      webhookLogs: Object.assign(Object.assign({}, webhookLogs), {\n        isLoading: true\n      })\n    })); //TODO: Fix types\n    //@ts-ignore\n\n    const data = yield call(api.connectivity.getWebhookLog, id, offset, limit); // yield put(connectivityActions.loadWebhookLogsSuccess(data));\n\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      webhookLogs: Object.assign({\n        isLoading: false\n      }, data)\n    }));\n  } catch (e) {\n    yield put(actions.setConnectivityState({\n      error: undefined,\n      webhookLogs: {\n        isLoading: false\n      }\n    }));\n  }\n}\n\nfunction* sagas() {\n  yield takeEvery(actions.loadDataAction, loadDataFunction);\n  yield takeLatest(actions.loadSlackActions, loadSlackFunction);\n  yield takeEvery(actions.postDataAction, postDataFunction);\n  yield takeEvery(actions.postCodeAction, postCodeFunction);\n  yield takeEvery(actions.loadScope, loadSlackPermissions);\n  yield takeEvery(actions.deleteWebhookConfigAction, deleteWebhookConfigFunction);\n  yield takeEvery(actions.postWebhookTestAction, postWebhookTestFunction);\n  yield takeEvery(actions.postWebhookRetryAction, postWebhookRetryFunction);\n  yield takeLatest(actions.loadWebhookLogsAction, loadWebhookLogsFunction);\n} // export store\n\n\nvar connectivityStore = {\n  sagas,\n  storeName: connectivityStoreName,\n  initialState,\n  reducer,\n  actions\n};\nexport { actions as connectivityActions, initialState as connectivityInitialState, reducer as connectivityReducers, sagas as connectivitySagas, connectivityStore as default };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/redux-store/connectivity/index.js"],"names":["c","connectivityStoreName","createAction","createSlice","__rest","takeEvery","takeLatest","put","all","call","select","api","initialState$1","isLoading","isSaving","list","processIds","slackChannels","reducers","initData","Object","assign","setConnectivityState","state","payload","cleanWebhookTestData","testResult","undefined","cleanWebhookLogsData","webhookLogs","cleanWebhookTestMessage","_a","status","message","cleanError","error","cleanSlackData","postWebhookRetryAction","prepare","logId","reducer","retryResult","isProcess","success","postWebhookRetryResult","actions$1","loadSlackActions","loadDataAction","postDataAction","postCodeAction","loadScope","deleteWebhookConfigAction","postWebhookTestAction","loadWebhookLogsAction","id","offset","limit","initialState","actions","sliceActions","name","type2ApiGet","slack","connectivity","getSlackConfiguration","email","getEmailConfiguration","sms","getSMSConfiguration","webhook","getWebhooksConfigurations","categories","getCategories","channelMap","getChannelMaps","type2ApiPost","postSlackConfiguration","postEmailConfiguration","postSMSConfiguration","postWebhooksConfiguration","channels","channels2Platform","title","events","data","length","isActive","_b","some","enabled","image","slackSubscriptions","addApi","loadPlatromData","ch","loadFunction","type","loadDataFunction","values","map","res","params","reduce","acc","curr","idx","webhooks","key","active","platform","e","loadSlackFunction","getSlackChannels","checkNewStatus","currPlatform","find","newActive","elm","postDataFunction","callback","_id","postSlackData","includes","postEmailSMSData","newData","filter","el","toString","stateSlackSubscriptions","slackEvents","channelIds","props","JSON","stringify","deleteSlackConfiguration","stateData","actionsResult","eventKey","subscriptions","recipients","body","patchEmailConfiguration","patchSMSConfiguration","putEmailSubscriptions","putSMSSubscriptions","deleteEmailSubscriptions","deleteSMSSubscriptions","postCodeFunction","postSlackCode","loadSlackPermissions","isLoadingScope","clientId","getSlackScope","deleteWebhookConfigFunction","webhookId","deleteWebhooksConfiguration","postWebhookTestFunction","isTesting","statusCode","postWebhookTest","postWebhookRetryFunction","postWebhookRetry","loadWebhookLogsFunction","getWebhookLog","sagas","connectivityStore","storeName","connectivityActions","connectivityInitialState","connectivityReducers","connectivitySagas","default"],"mappings":"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","sourcesContent":["import { c as connectivityStoreName } from '../constants-4d9682b2.js';\nexport { c as connectivityStoreName } from '../constants-4d9682b2.js';\nimport { createAction, createSlice } from '@reduxjs/toolkit';\nimport { __rest } from 'tslib';\nimport { takeEvery, takeLatest, put, all, call, select } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\n\nconst initialState$1 = {\r\n    isLoading: false,\r\n    isSaving: false,\r\n    list: [],\r\n    processIds: [],\r\n    slackChannels: {\r\n        isLoading: false,\r\n    },\r\n};\r\nconst reducers = {\r\n    initData: () => (Object.assign({}, initialState$1)),\r\n    // Deprecated: use initData instead;\r\n    // cleanData: () => ({ ...initialState }),\r\n    setConnectivityState: (state, { payload }) => (Object.assign(Object.assign({}, state), payload)),\r\n    cleanWebhookTestData: (state) => (Object.assign(Object.assign({}, state), { testResult: undefined })),\r\n    cleanWebhookLogsData: (state) => (Object.assign(Object.assign({}, state), { webhookLogs: undefined })),\r\n    cleanWebhookTestMessage: (state) => {\r\n        var _a;\r\n        return (Object.assign(Object.assign({}, state), { testResult: { status: (_a = state.testResult) === null || _a === void 0 ? void 0 : _a.status, message: undefined } }));\r\n    },\r\n    cleanError: (state) => (Object.assign(Object.assign({}, state), { error: undefined })),\r\n    cleanSlackData: (state) => (Object.assign(Object.assign({}, state), { slackChannels: { isLoading: false } })),\r\n    postWebhookRetryAction: {\r\n        prepare: (logId) => ({ payload: logId }),\r\n        reducer: (state, { payload }) => (Object.assign(Object.assign({}, state), { retryResult: Object.assign(Object.assign({}, state.retryResult), { [payload]: { isProcess: true, success: false } }) })),\r\n    },\r\n    postWebhookRetryResult: {\r\n        prepare: (payload) => ({ payload }),\r\n        reducer: (state, { payload }) => (Object.assign(Object.assign({}, state), { retryResult: Object.assign(Object.assign({}, state.retryResult), payload) })),\r\n    },\r\n};\r\nconst actions$1 = {\r\n    loadSlackActions: createAction(`${connectivityStoreName}/loadSlackActions`),\r\n    loadDataAction: createAction(`${connectivityStoreName}/loadDataAction`, (payload) => ({\r\n        payload,\r\n    })),\r\n    postDataAction: createAction(`${connectivityStoreName}/postDataAction`, (payload) => ({\r\n        payload,\r\n    })),\r\n    postCodeAction: createAction(`${connectivityStoreName}/postCodeAction`, (payload) => ({ payload })),\r\n    loadScope: createAction(`${connectivityStoreName}/loadScope`),\r\n    deleteWebhookConfigAction: createAction(`${connectivityStoreName}/deleteWebhookConfigAction`, (payload) => ({\r\n        payload,\r\n    })),\r\n    postWebhookTestAction: createAction(`${connectivityStoreName}/postWebhookTestAction`, (payload) => ({\r\n        payload,\r\n    })),\r\n    loadWebhookLogsAction: createAction(`${connectivityStoreName}/loadWebhookLogsAction`, (id, offset = 0, limit = 10) => ({ payload: { id, offset, limit } })),\r\n};\n\nconst initialState = {\r\n    isLoading: false,\r\n    isSaving: false,\r\n    list: [],\r\n    processIds: [],\r\n    slackChannels: {\r\n        isLoading: false,\r\n    },\r\n};\r\nconst { reducer, actions: sliceActions } = createSlice({\r\n    name: connectivityStoreName,\r\n    initialState,\r\n    reducers: Object.assign({}, reducers),\r\n});\r\nconst actions = Object.assign(Object.assign({}, sliceActions), actions$1);\n\nconst type2ApiGet = {\r\n    slack: api.connectivity.getSlackConfiguration,\r\n    email: api.connectivity.getEmailConfiguration,\r\n    sms: api.connectivity.getSMSConfiguration,\r\n    webhook: api.connectivity.getWebhooksConfigurations,\r\n    categories: api.connectivity.getCategories,\r\n    channelMap: api.connectivity.getChannelMaps,\r\n};\r\nconst type2ApiPost = {\r\n    slack: api.connectivity.postSlackConfiguration,\r\n    email: api.connectivity.postEmailConfiguration,\r\n    sms: api.connectivity.postSMSConfiguration,\r\n    webhook: api.connectivity.postWebhooksConfiguration,\r\n};\r\nconst channels = ['email', 'slack', 'sms', 'webhook'];\r\nconst channels2Platform = {\r\n    sms: {\r\n        title: 'connectivity.sms',\r\n        events: (data) => { var _a; return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0; },\r\n        isActive: (data) => { var _a, _b; return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({ enabled }) => enabled)) !== null && _b !== void 0 ? _b : false; },\r\n        image: 'sms',\r\n    },\r\n    email: {\r\n        title: 'common.email',\r\n        events: (data) => { var _a; return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0; },\r\n        isActive: (data) => { var _a, _b; return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({ enabled }) => enabled)) !== null && _b !== void 0 ? _b : false; },\r\n        image: 'email',\r\n    },\r\n    slack: {\r\n        title: 'connectivity.slack',\r\n        events: (data) => { var _a, _b; return ((_b = (_a = data) === null || _a === void 0 ? void 0 : _a.slackSubscriptions) === null || _b === void 0 ? void 0 : _b.length) || 0; },\r\n        isActive: (data) => { var _a, _b; return (_b = !!((_a = data) === null || _a === void 0 ? void 0 : _a.slackSubscriptions.some(({ isActive }) => isActive))) !== null && _b !== void 0 ? _b : false; },\r\n        image: 'slack',\r\n    },\r\n    webhook: {\r\n        title: 'connectivity.webhook',\r\n        events: (data) => { var _a; return ((_a = data) === null || _a === void 0 ? void 0 : _a.length) || 0; },\r\n        isActive: (data) => { var _a, _b; return (_b = (_a = data) === null || _a === void 0 ? void 0 : _a.some(({ isActive }) => isActive)) !== null && _b !== void 0 ? _b : false; },\r\n        image: 'webhook',\r\n    },\r\n};\n\nconst addApi = ['categories', 'channelMap'];\r\nfunction* loadPlatromData(ch) {\r\n    return yield loadFunction({ payload: { api: ch }, type: '' });\r\n}\r\nfunction* loadDataFunction({ payload = channels }) {\r\n    yield put(actions.setConnectivityState({ isLoading: true }));\r\n    try {\r\n        const values = yield all([\r\n            ...payload.map(loadPlatromData),\r\n            yield loadFunction({ payload: { api: 'categories' }, type: '' }),\r\n            yield (function* () {\r\n                const res = yield all(payload.map(function* (ch) {\r\n                    return yield loadFunction({ payload: { api: 'channelMap', params: ch }, type: '' });\r\n                }));\r\n                return res.reduce((acc, curr, idx) => (Object.assign(Object.assign({}, acc), { [`${payload[idx]}`]: curr })), {});\r\n            })(),\r\n        ]);\r\n        const webhooks = yield loadFunction({ payload: { api: 'webhook' }, type: '' });\r\n        const data = values.reduce((acc, curr, idx) => payload[idx]\r\n            ? values[values.length - 1][payload[idx]].length\r\n                ? Object.assign(Object.assign({}, acc), { [`${payload[idx]}`]: curr, list: [\r\n                        ...acc.list,\r\n                        {\r\n                            id: idx,\r\n                            key: payload[idx],\r\n                            events: channels2Platform[payload[idx]].events(curr),\r\n                            active: channels2Platform[payload[idx]].isActive(curr),\r\n                            platform: channels2Platform[payload[idx]].title,\r\n                            image: channels2Platform[payload[idx]].image,\r\n                        },\r\n                    ] }) : acc\r\n            : Object.assign(Object.assign({}, acc), { [`${addApi[idx - payload.length]}`]: curr }), { list: [], webhook: webhooks });\r\n        yield put(actions.setConnectivityState(Object.assign(Object.assign({}, data), { error: undefined, isSaving: false, isLoading: false })));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.setConnectivityState({ isLoading: false }));\r\n    }\r\n}\r\nfunction* loadFunction({ payload: { api, params }, }) {\r\n    try {\r\n        return yield call(type2ApiGet[api], params);\r\n    }\r\n    catch (e) {\r\n        return undefined;\r\n    }\r\n}\r\nfunction* loadSlackFunction() {\r\n    try {\r\n        yield put(actions.setConnectivityState({ slackChannels: { isLoading: true } }));\r\n        const data = yield call(api.connectivity.getSlackChannels);\r\n        yield put(actions.setConnectivityState({ error: undefined, slackChannels: { isLoading: false, data } }));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.setConnectivityState({ error: undefined, slackChannels: { isLoading: false } }));\r\n    }\r\n}\r\nfunction* checkNewStatus(platform, data) {\r\n    const { connectivity: { list }, } = yield select();\r\n    const currPlatform = list.find(({ key }) => key === platform);\r\n    if (!currPlatform)\r\n        return;\r\n    const newActive = channels2Platform[platform].isActive(data);\r\n    if (newActive === currPlatform.active)\r\n        return;\r\n    //TODO: double check\r\n    yield put(actions.setConnectivityState({\r\n        list: list.map((elm) => (elm.key === platform ? Object.assign(Object.assign({}, elm), { active: newActive }) : elm)),\r\n    }));\r\n}\r\nfunction* postDataFunction({ payload: { platform, data, callback }, }) {\r\n    var _a;\r\n    const { processIds } = yield select((state) => state.connectivity);\r\n    try {\r\n        yield put(actions.setConnectivityState({\r\n            isSaving: true,\r\n            //@ts-ignore\r\n            processIds: platform === 'webhook' ? [data._id, ...processIds] : processIds,\r\n        }));\r\n        if (platform === 'slack') {\r\n            yield postSlackData({ payload: data, type: '' });\r\n        }\r\n        else if (['sms', 'email'].includes(platform)) {\r\n            yield postEmailSMSData({ payload: data, type: platform });\r\n        }\r\n        else {\r\n            yield call(type2ApiPost[platform], data);\r\n        }\r\n        if (!['sms', 'email'].includes(platform)) {\r\n            const newData = yield loadFunction({ payload: { api: platform }, type: '' });\r\n            if (platform === 'webhook') {\r\n                newData.id = data._id;\r\n            }\r\n            yield put(actions.setConnectivityState({\r\n                error: undefined,\r\n                isSaving: false,\r\n                [`${platform}`]: newData,\r\n                processIds: newData.id ? processIds.filter((el) => el !== newData.id) : processIds,\r\n            }));\r\n            yield checkNewStatus(platform, newData);\r\n            callback === null || callback === void 0 ? void 0 : callback(true);\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put(actions.setConnectivityState({ error: (_a = e.message) !== null && _a !== void 0 ? _a : e.toString(), isSaving: false, isLoading: false }));\r\n    }\r\n}\r\nfunction* postSlackData({ payload }) {\r\n    const { connectivity: { slack }, } = yield select();\r\n    if (!slack) {\r\n        return;\r\n    }\r\n    const { slackSubscriptions: stateSlackSubscriptions } = slack;\r\n    const { slackSubscriptions } = payload;\r\n    yield all([\r\n        ...slackSubscriptions\r\n            .reduce((acc, curr) => {\r\n            var _a, _b;\r\n            if (!curr.id && curr.slackEvents && ((_a = curr.slackEvents[0].channelIds) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                return [...acc, curr];\r\n            }\r\n            const el = stateSlackSubscriptions === null || stateSlackSubscriptions === void 0 ? void 0 : stateSlackSubscriptions.find((_a) => {\r\n                var { id } = _a, props = __rest(_a, [\"id\"]);\r\n                return id === curr.id && JSON.stringify(Object.assign({ id }, props)) !== JSON.stringify(curr);\r\n            });\r\n            if (el && curr.slackEvents && ((_b = curr.slackEvents[0].channelIds) === null || _b === void 0 ? void 0 : _b.length)) {\r\n                return [...acc, curr];\r\n            }\r\n            return acc;\r\n        }, [])\r\n            .map(function* (el) {\r\n            return yield call(type2ApiPost.slack, el);\r\n        }),\r\n        ...slackSubscriptions\r\n            .reduce((acc, curr) => {\r\n            if (curr.id && !curr.slackEvents[0].channelIds.length) {\r\n                return [...acc, curr];\r\n            }\r\n            return acc;\r\n        }, [])\r\n            .map(function* (el) {\r\n            return yield call(api.connectivity.deleteSlackConfiguration, el);\r\n        }),\r\n    ]);\r\n}\r\nfunction* postEmailSMSData({ payload, type }) {\r\n    const { connectivity } = yield select();\r\n    const { processIds } = yield select((state) => state.connectivity);\r\n    const stateData = connectivity[type];\r\n    if (!stateData)\r\n        return;\r\n    let actionsResult = [];\r\n    try {\r\n        actionsResult = yield all([\r\n            // create new\r\n            ...payload\r\n                .reduce((acc, curr) => {\r\n                const state = stateData.find(({ eventKey }) => eventKey === curr.eventKey);\r\n                if (!state && curr.subscriptions[0].recipients.filter((el) => el).length) {\r\n                    return [...acc, curr];\r\n                }\r\n                return acc;\r\n            }, [])\r\n                .map(function* (data) {\r\n                return yield call(type === 'email' ? api.connectivity.postEmailConfiguration : api.connectivity.postSMSConfiguration, data);\r\n            }),\r\n            // update exists\r\n            ...payload\r\n                .reduce((acc, curr) => {\r\n                const state = stateData.find(({ eventKey }) => eventKey === curr.eventKey);\r\n                if (state && JSON.stringify(state) !== JSON.stringify(curr)) {\r\n                    return [...acc, curr];\r\n                }\r\n                return acc;\r\n            }, [])\r\n                .map(function* (data) {\r\n                const { subscriptions, eventKey } = data;\r\n                const _a = subscriptions[0], { id = '', enabled } = _a, body = __rest(_a, [\"id\", \"enabled\"]);\r\n                return yield all([\r\n                    yield call(type === 'email' ? api.connectivity.patchEmailConfiguration : api.connectivity.patchSMSConfiguration, { eventKey, enabled }),\r\n                    yield call(type === 'email' ? api.connectivity.putEmailSubscriptions : api.connectivity.putSMSSubscriptions, id, eventKey, Object.assign(Object.assign({}, body), { enabled })),\r\n                ]);\r\n            }),\r\n            // delete record with empty recipients\r\n            ...payload\r\n                .reduce((acc, curr) => {\r\n                const state = stateData.find(({ eventKey }) => eventKey === curr.eventKey);\r\n                if (state &&\r\n                    state.subscriptions[0].recipients.length &&\r\n                    !curr.subscriptions[0].recipients.filter((el) => !!el).length) {\r\n                    return [...acc, curr];\r\n                }\r\n                return acc;\r\n            }, [])\r\n                .map(function* ({ eventKey, subscriptions }) {\r\n                return call(type === 'email' ? api.connectivity.deleteEmailSubscriptions : api.connectivity.deleteSMSSubscriptions, eventKey, subscriptions[0].id || '');\r\n            }),\r\n        ]);\r\n    }\r\n    catch (_a) {\r\n    }\r\n    if (actionsResult.length) {\r\n        const newData = yield loadFunction({ payload: { api: type }, type: '' });\r\n        // yield put(connectivityActions.postDataSuccess({ platform: type, data: newData }));\r\n        yield put(actions.setConnectivityState({\r\n            error: undefined,\r\n            isSaving: false,\r\n            [`${type}`]: newData,\r\n            processIds: newData.id ? processIds.filter((el) => el !== newData.id) : processIds,\r\n        }));\r\n        yield checkNewStatus(type, newData);\r\n    }\r\n    else {\r\n        // yield put(connectivityActions.postDataSuccess({ platform: type, data: stateData }));\r\n        yield put(actions.setConnectivityState({\r\n            error: undefined,\r\n            isSaving: false,\r\n            [`${type}`]: stateData,\r\n            processIds: processIds,\r\n        }));\r\n    }\r\n}\r\nfunction* postCodeFunction({ payload }) {\r\n    try {\r\n        yield api.connectivity.postSlackCode(payload);\r\n    }\r\n    catch (_a) {\r\n    }\r\n    // yield put(connectivityActions.postCodeSuccess());\r\n    yield put(actions.setConnectivityState({ error: undefined, isSaving: false }));\r\n}\r\nfunction* loadSlackPermissions() {\r\n    const { slackChannels } = yield select((state) => state.connectivity);\r\n    try {\r\n        yield put(actions.setConnectivityState({ slackChannels: Object.assign(Object.assign({}, slackChannels), { isLoadingScope: true }) }));\r\n        const { clientId } = yield call(api.connectivity.getSlackScope);\r\n        // yield put(connectivityActions.loadScopeSuccess(clientId));\r\n        yield put(actions.setConnectivityState({\r\n            slackChannels: { error: undefined, clientId, isLoadingScope: false, isLoading: false },\r\n        }));\r\n    }\r\n    catch (_a) {\r\n        // yield put(connectivityActions.loadScopeSuccess(null));\r\n        yield put(actions.setConnectivityState({\r\n            slackChannels: { error: undefined, isLoadingScope: false, isLoading: false },\r\n        }));\r\n    }\r\n}\r\nfunction* deleteWebhookConfigFunction({ payload }) {\r\n    const { callback, webhookId } = payload;\r\n    const { processIds } = yield select((state) => state.connectivity);\r\n    try {\r\n        yield put(actions.setConnectivityState({ isSaving: true }));\r\n        yield call(api.connectivity.deleteWebhooksConfiguration, webhookId);\r\n    }\r\n    catch (e) {\r\n        callback === null || callback === void 0 ? void 0 : callback(null, e.message);\r\n    }\r\n    const newData = yield loadFunction({ payload: { api: 'webhook' }, type: '' });\r\n    if (newData) {\r\n        yield put(actions.setConnectivityState({\r\n            error: undefined,\r\n            isSaving: false,\r\n            webhook: newData,\r\n            processIds: newData.id ? processIds.filter((el) => el !== newData.id) : processIds,\r\n        }));\r\n    }\r\n    callback === null || callback === void 0 ? void 0 : callback(true);\r\n}\r\nfunction* postWebhookTestFunction({ payload }) {\r\n    try {\r\n        yield put(actions.setConnectivityState({ isTesting: true }));\r\n        const { statusCode, body } = yield call(api.connectivity.postWebhookTest, payload);\r\n        if ([201, 200].includes(statusCode)) {\r\n            // yield put(connectivityActions.postWebhookTestSuccess('success', JSON.stringify(body, null, 2)));\r\n            const message = JSON.stringify(body, null, 2);\r\n            yield put(actions.setConnectivityState({ isTesting: false, testResult: { status: 'success', message } }));\r\n        }\r\n        else {\r\n            // yield put(connectivityActions.postWebhookTestSuccess('failed', body.toString()));\r\n            yield put(actions.setConnectivityState({ isTesting: false, testResult: { status: 'failed' } }));\r\n        }\r\n    }\r\n    catch (e) {\r\n        // yield put(connectivityActions.postWebhookTestSuccess('failed', e.toString()));\r\n        yield put(actions.setConnectivityState({\r\n            isTesting: false,\r\n            testResult: { status: 'failed', message: e.toString() },\r\n        }));\r\n    }\r\n}\r\nfunction* postWebhookRetryFunction({ payload }) {\r\n    try {\r\n        const { statusCode } = yield call(api.connectivity.postWebhookRetry, payload);\r\n        yield put(actions.postWebhookRetryResult({\r\n            [payload]: { isProcess: false, success: statusCode === 202 },\r\n        }));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.postWebhookRetryResult({\r\n            [payload]: { isProcess: false, success: false },\r\n        }));\r\n    }\r\n}\r\nfunction* loadWebhookLogsFunction({ payload: { id, limit, offset }, }) {\r\n    const { webhookLogs } = yield select((state) => state.connectivity);\r\n    try {\r\n        yield put(actions.setConnectivityState({ webhookLogs: Object.assign(Object.assign({}, webhookLogs), { isLoading: true }) }));\r\n        //TODO: Fix types\r\n        //@ts-ignore\r\n        const data = yield call(api.connectivity.getWebhookLog, id, offset, limit);\r\n        // yield put(connectivityActions.loadWebhookLogsSuccess(data));\r\n        yield put(actions.setConnectivityState({ error: undefined, webhookLogs: Object.assign({ isLoading: false }, data) }));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.setConnectivityState({ error: undefined, webhookLogs: { isLoading: false } }));\r\n    }\r\n}\r\nfunction* sagas() {\r\n    yield takeEvery(actions.loadDataAction, loadDataFunction);\r\n    yield takeLatest(actions.loadSlackActions, loadSlackFunction);\r\n    yield takeEvery(actions.postDataAction, postDataFunction);\r\n    yield takeEvery(actions.postCodeAction, postCodeFunction);\r\n    yield takeEvery(actions.loadScope, loadSlackPermissions);\r\n    yield takeEvery(actions.deleteWebhookConfigAction, deleteWebhookConfigFunction);\r\n    yield takeEvery(actions.postWebhookTestAction, postWebhookTestFunction);\r\n    yield takeEvery(actions.postWebhookRetryAction, postWebhookRetryFunction);\r\n    yield takeLatest(actions.loadWebhookLogsAction, loadWebhookLogsFunction);\r\n}\n\n// export store\r\nvar connectivityStore = {\r\n    sagas,\r\n    storeName: connectivityStoreName,\r\n    initialState,\r\n    reducer,\r\n    actions,\r\n};\n\nexport { actions as connectivityActions, initialState as connectivityInitialState, reducer as connectivityReducers, sagas as connectivitySagas, connectivityStore as default };\n"]},"metadata":{},"sourceType":"module"}