{"ast":null,"code":"import { Get, Patch, Post } from '../../fetch';\nimport { urls } from '../../constants';\nexport async function getGlobalSecurityPolicy() {\n  return Get(urls.identity.configurations.v1);\n}\nexport async function getMfaPolicy() {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy`);\n}\nexport async function getVendorMfaPolicy() {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy/vendor`);\n}\nexport async function saveMfaPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/mfa-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/mfa-policy`, body);\n  }\n}\nexport async function getLockoutPolicy() {\n  return Get(`${urls.identity.configurations.v1}/lockout-policy`);\n}\nexport async function saveLockoutPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/lockout-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/lockout-policy`, body);\n  }\n}\nexport async function getCaptchaPolicy() {\n  try {\n    return await Get(`${urls.identity.configurations.v1}/captcha-policy/public`);\n  } catch {\n    return null;\n  }\n}\nexport async function getPasswordHistoryPolicy() {\n  return Get(`${urls.identity.configurations.v1}/password-history-policy`);\n}\nexport async function savePasswordHistoryPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/password-history-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/password-history-policy`, body);\n  }\n}\nexport async function getPasswordConfigPolicy() {\n  return Get(`${urls.identity.configurations.v1}/password`);\n}","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/rest-api/auth/secutiry-poilicy/index.js"],"names":["Get","Patch","Post","urls","getGlobalSecurityPolicy","identity","configurations","v1","getMfaPolicy","getVendorMfaPolicy","saveMfaPolicy","body","id","getLockoutPolicy","saveLockoutPolicy","getCaptchaPolicy","getPasswordHistoryPolicy","savePasswordHistoryPolicy","getPasswordConfigPolicy"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,QAAiC,aAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,eAAeC,uBAAf,GAAyC;AAC9C,SAAOJ,GAAG,CAACG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAA9B,CAAV;AACD;AACD,OAAO,eAAeC,YAAf,GAA8B;AACnC,SAAOR,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,aAApC,CAAV;AACD;AACD,OAAO,eAAeE,kBAAf,GAAoC;AACzC,SAAOT,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,oBAApC,CAAV;AACD;AACD,OAAO,eAAeG,aAAf,CAA6BC,IAA7B,EAAmC;AACxC,MAAIA,IAAI,CAACC,EAAT,EAAa;AACX,WAAOX,KAAK,CAAE,GAAEE,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,aAApC,EAAkDI,IAAlD,CAAZ;AACD,GAFD,MAEO;AACL,WAAOT,IAAI,CAAE,GAAEC,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,aAApC,EAAkDI,IAAlD,CAAX;AACD;AACF;AACD,OAAO,eAAeE,gBAAf,GAAkC;AACvC,SAAOb,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,iBAApC,CAAV;AACD;AACD,OAAO,eAAeO,iBAAf,CAAiCH,IAAjC,EAAuC;AAC5C,MAAIA,IAAI,CAACC,EAAT,EAAa;AACX,WAAOX,KAAK,CAAE,GAAEE,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,iBAApC,EAAsDI,IAAtD,CAAZ;AACD,GAFD,MAEO;AACL,WAAOT,IAAI,CAAE,GAAEC,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,iBAApC,EAAsDI,IAAtD,CAAX;AACD;AACF;AACD,OAAO,eAAeI,gBAAf,GAAkC;AACvC,MAAI;AACF,WAAO,MAAMf,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,wBAApC,CAAhB;AACD,GAFD,CAEE,MAAM;AACN,WAAO,IAAP;AACD;AACF;AACD,OAAO,eAAeS,wBAAf,GAA0C;AAC/C,SAAOhB,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,0BAApC,CAAV;AACD;AACD,OAAO,eAAeU,yBAAf,CAAyCN,IAAzC,EAA+C;AACpD,MAAIA,IAAI,CAACC,EAAT,EAAa;AACX,WAAOX,KAAK,CAAE,GAAEE,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,0BAApC,EAA+DI,IAA/D,CAAZ;AACD,GAFD,MAEO;AACL,WAAOT,IAAI,CAAE,GAAEC,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,0BAApC,EAA+DI,IAA/D,CAAX;AACD;AACF;AACD,OAAO,eAAeO,uBAAf,GAAyC;AAC9C,SAAOlB,GAAG,CAAE,GAAEG,IAAI,CAACE,QAAL,CAAcC,cAAd,CAA6BC,EAAG,WAApC,CAAV;AACD","sourcesContent":["import { Get, Patch, Post } from '../../fetch';\nimport { urls } from '../../constants';\nexport async function getGlobalSecurityPolicy() {\n  return Get(urls.identity.configurations.v1);\n}\nexport async function getMfaPolicy() {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy`);\n}\nexport async function getVendorMfaPolicy() {\n  return Get(`${urls.identity.configurations.v1}/mfa-policy/vendor`);\n}\nexport async function saveMfaPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/mfa-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/mfa-policy`, body);\n  }\n}\nexport async function getLockoutPolicy() {\n  return Get(`${urls.identity.configurations.v1}/lockout-policy`);\n}\nexport async function saveLockoutPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/lockout-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/lockout-policy`, body);\n  }\n}\nexport async function getCaptchaPolicy() {\n  try {\n    return await Get(`${urls.identity.configurations.v1}/captcha-policy/public`);\n  } catch {\n    return null;\n  }\n}\nexport async function getPasswordHistoryPolicy() {\n  return Get(`${urls.identity.configurations.v1}/password-history-policy`);\n}\nexport async function savePasswordHistoryPolicy(body) {\n  if (body.id) {\n    return Patch(`${urls.identity.configurations.v1}/password-history-policy`, body);\n  } else {\n    return Post(`${urls.identity.configurations.v1}/password-history-policy`, body);\n  }\n}\nexport async function getPasswordConfigPolicy() {\n  return Get(`${urls.identity.configurations.v1}/password`);\n}"]},"metadata":{},"sourceType":"module"}