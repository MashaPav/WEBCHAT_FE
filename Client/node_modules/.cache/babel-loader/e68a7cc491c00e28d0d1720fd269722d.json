{"ast":null,"code":"import { authStoreName, bindActionCreators, authActions, acceptInvitationActions, acceptInvitationReducers, activateAccountActions, activateAccountReducers, apiTokensActions, apiTokensReducers, forgotPasswordActions, forgotPasswordReducers, resetPhoneNumberActions, resetPhoneNumberReducers, loginActions, loginReducers, mfaActions, mfaReducers, profileActions, profileReducers, signUpActions, signUpReducers, socialLoginsActions, socialLoginsReducer, teamActions, teamReducers, ssoActions, ssoReducers, securityPolicyActions, securityPolicyReducers, tenantsActions, tenantsReducers, rolesActions, rolesReducers, sessionsActions, sessionsReducers, sessionsPolicyActions, sessionsPolicyReducers } from '@frontegg/redux-store';\nimport { createContext, useContext, useMemo, useEffect } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { __rest } from 'tslib';\nconst ShadowDomContext = createContext({});\n\nconst useShadowDom = () => {\n  const context = useContext(ShadowDomContext);\n\n  const {\n    urlStrategy = 'path',\n    onRedirectTo = urlStrategy === 'path' ? path => window.history.pushState(null, '', path) : path => window.history.pushState(null, '', `#${path}`),\n    renderByRoute = false,\n    customLoader = false,\n    customStyles,\n    contextOptions\n  } = context,\n        rest = __rest(context, [\"urlStrategy\", \"onRedirectTo\", \"renderByRoute\", \"customLoader\", \"customStyles\", \"contextOptions\"]);\n\n  return Object.assign({\n    isShadowDom: true,\n    onRedirectTo,\n    renderByRoute,\n    customLoader,\n    customStyles,\n    urlStrategy,\n    contextOptions: Object.assign({\n      requestCredentials: 'include'\n    }, contextOptions)\n  }, rest);\n};\n\nconst defaultMapper = {\n  state: state => state,\n  actions: actions => actions\n};\n\nconst useAuth = (stateMapper = defaultMapper.state) => {\n  return useSelector(state => stateMapper(state[authStoreName]), shallowEqual);\n};\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const { isAuthenticated, user } = useAuth();\r\n *   const loginWithRedirect = useLoginWithRedirect();\r\n *\r\n *   if (!isAuthenticated) {\r\n *     loginWithRedirect();\r\n *     return <></>;\r\n *   }\r\n *\r\n *   return (<div>Hello User {user.name}</div>);\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get if user is \"Authenticated\"\r\n */\n\n\nconst useLoginWithRedirect = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions.requestHostedLoginAuthorize, dispatch), [authActions.requestHostedLoginAuthorize]);\n};\n\nconst useAuthActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions, dispatch), [authActions]);\n};\n\nconst useOnRedirectTo = () => {\n  var _a;\n\n  const context = useContext(ShadowDomContext);\n  return (_a = context === null || context === void 0 ? void 0 : context.onRedirectTo) !== null && _a !== void 0 ? _a : ContextHolder.onRedirectTo;\n};\n\nconst useAuthRoutes = () => useAuth(state => Object.assign({}, state.routes));\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const isAuthenticated  = useIsAuthenticated();\r\n *   return isAuthenticated ? <div>Hello User</div> : <Redirect to={'/login'}/>\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get if user is \"Authenticated\"\r\n */\n\n\nconst useIsAuthenticated = () => useSelector(({\n  [authStoreName]: {\n    isAuthenticated\n  }\n}) => isAuthenticated, shallowEqual);\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const user = useAuthUser();\r\n *   return user ? <div>Hello {user.name}!</div> : <div>Hello Guest!</div>\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get the authenticated user\r\n * the return user is null if not authenticated\r\n */\n\n\nconst useAuthUser = () => {\n  const routes = useAuthRoutes();\n  const onRedirectTo = useOnRedirectTo();\n  const user = useAuthUserOrNull();\n\n  if (user == null) {\n    onRedirectTo(routes.loginUrl, {\n      refresh: true\n    });\n    return {};\n  }\n\n  return user;\n};\n\nconst useAuthUserOrNull = () => {\n  const {\n    user\n  } = useSelector(({\n    [authStoreName]: {\n      user\n    }\n  }) => ({\n    user\n  }), shallowEqual);\n  return user || null;\n};\n/**\r\n * hooks helpers\r\n */\n\n\nconst sliceReducerActionsBy = reducer => {\n  const reducerKeys = Object.keys(reducer);\n  const reducerActions = reducerKeys.map(key => ({\n    [key]: authActions[key]\n  }));\n  return reducerActions.reduce((p, n) => Object.assign(Object.assign({}, p), n), {});\n};\n\nconst stateHookGenerator = (stateMapper, subState) => {\n  return useSelector(state => {\n    var _a;\n\n    return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[authStoreName][subState])) !== null && _a !== void 0 ? _a : state[authStoreName][subState];\n  }, shallowEqual);\n};\n\nconst reducerActionsGenerator = (actions, reducers) => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(Object.assign(Object.assign({}, actions), sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\n};\n\nconst useAcceptInvitationState = stateMapper => stateHookGenerator(stateMapper, 'acceptInvitationState');\n\nconst useAcceptInvitationActions = () => reducerActionsGenerator(acceptInvitationActions, acceptInvitationReducers);\n\nconst useActivateAccountState = stateMapper => stateHookGenerator(stateMapper, 'activateState');\n\nconst useActivateAccountActions = () => reducerActionsGenerator(activateAccountActions, activateAccountReducers);\n\nconst useApiTokensState = stateMapper => stateHookGenerator(stateMapper, 'apiTokensState');\n\nconst useApiTokensActions = () => reducerActionsGenerator(apiTokensActions, apiTokensReducers);\n\nconst useForgotPasswordState = stateMapper => stateHookGenerator(stateMapper, 'forgotPasswordState');\n\nconst useForgotPasswordActions = () => reducerActionsGenerator(forgotPasswordActions, forgotPasswordReducers);\n\nconst useResetPhoneNumberState = stateMapper => stateHookGenerator(stateMapper, 'resetPhoneNumberState');\n\nconst useResetPhoneNumberActions = () => reducerActionsGenerator(resetPhoneNumberActions, resetPhoneNumberReducers);\n\nconst useLoginState = stateMapper => stateHookGenerator(stateMapper, 'loginState');\n\nconst useLoginActions = () => reducerActionsGenerator(loginActions, loginReducers);\n\nconst useMfaState = stateMapper => stateHookGenerator(stateMapper, 'mfaState');\n\nconst useMfaActions = () => reducerActionsGenerator(mfaActions, mfaReducers);\n\nconst reloadProfileIfNeeded = () => {\n  const {\n    loading\n  } = useProfileState();\n  const {\n    loadProfile\n  } = useProfileActions();\n  useEffect(() => {\n    !loading && loadProfile();\n  }, []);\n};\n\nconst useProfileState = stateMapper => stateHookGenerator(stateMapper, 'profileState');\n\nconst useProfileActions = () => reducerActionsGenerator(profileActions, profileReducers);\n\nconst useSignUpState = stateMapper => stateHookGenerator(stateMapper, 'signUpState');\n\nconst useSignUpActions = () => reducerActionsGenerator(signUpActions, signUpReducers);\n\nconst useSocialLoginState = stateMapper => stateHookGenerator(stateMapper, 'socialLoginState');\n\nconst useSocialLoginActions = () => reducerActionsGenerator(socialLoginsActions, socialLoginsReducer);\n\nconst useAuthTeamState = stateMapper => stateHookGenerator(stateMapper, 'teamState');\n\nconst useAuthTeamActions = () => reducerActionsGenerator(teamActions, teamReducers);\n\nconst useSSOState = stateMapper => stateHookGenerator(stateMapper, 'ssoState');\n\nconst useSSOActions = () => reducerActionsGenerator(ssoActions, ssoReducers);\n\nconst useSecurityPolicyState = stateMapper => stateHookGenerator(stateMapper, 'securityPolicyState');\n\nconst useSecurityPolicyActions = () => reducerActionsGenerator(securityPolicyActions, securityPolicyReducers);\n\nconst usePublicPolicySettings = (loadOnMount = false) => {\n  const {\n    loading,\n    policy,\n    saving,\n    error\n  } = useSecurityPolicyState(state => state.publicPolicy);\n  const {\n    loadPublicSecurityPolicy\n  } = useSecurityPolicyActions();\n  useEffect(() => {\n    (loadOnMount || !policy) && loadPublicSecurityPolicy(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadOnMount, loadPublicSecurityPolicy]);\n  return {\n    loading,\n    saving,\n    error,\n    policy\n  };\n};\n\nconst usePublicAuthStrategiesPolicySettings = (loadOnMount = false) => {\n  const {\n    loading,\n    policy,\n    saving,\n    error\n  } = useSecurityPolicyState(state => state.publicAuthStrategyPolicy);\n  const {\n    loadPublicAuthStrategiesPolicy\n  } = useSecurityPolicyActions();\n  useEffect(() => {\n    (loadOnMount || !policy) && loadPublicAuthStrategiesPolicy(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadOnMount, loadPublicAuthStrategiesPolicy]);\n  return {\n    loading,\n    saving,\n    error,\n    policy\n  };\n};\n\nconst useTenantsState = stateMapper => stateHookGenerator(stateMapper, 'tenantsState');\n\nconst useTenantsActions = () => reducerActionsGenerator(tenantsActions, tenantsReducers);\n\nconst useRolesState = stateMapper => stateHookGenerator(stateMapper, 'rolesState');\n\nconst useRolesActions = () => reducerActionsGenerator(rolesActions, rolesReducers);\n\nconst useSessionsState = stateMapper => stateHookGenerator(stateMapper, 'sessionsState');\n\nconst useSessionsActions = () => reducerActionsGenerator(sessionsActions, sessionsReducers);\n\nconst useSessionsPolicyState = stateMapper => stateHookGenerator(stateMapper, 'sessionsPolicyState');\n\nconst useSessionsPolicyActions = () => reducerActionsGenerator(sessionsPolicyActions, sessionsPolicyReducers);\n\nexport { useSignUpActions as A, useSocialLoginState as B, useSocialLoginActions as C, useAuthTeamState as D, useAuthTeamActions as E, useSSOState as F, useSSOActions as G, useSecurityPolicyState as H, useSecurityPolicyActions as I, usePublicPolicySettings as J, usePublicAuthStrategiesPolicySettings as K, useTenantsState as L, useTenantsActions as M, useRolesState as N, useRolesActions as O, useSessionsState as P, useSessionsActions as Q, useSessionsPolicyState as R, useSessionsPolicyActions as S, ShadowDomContext as T, useShadowDom as U, useAuthActions as a, useOnRedirectTo as b, useAuthRoutes as c, useIsAuthenticated as d, useAuthUser as e, useAuthUserOrNull as f, useLoginWithRedirect as g, useAcceptInvitationState as h, useAcceptInvitationActions as i, useActivateAccountState as j, useActivateAccountActions as k, useApiTokensState as l, useApiTokensActions as m, useForgotPasswordState as n, useForgotPasswordActions as o, useResetPhoneNumberState as p, useResetPhoneNumberActions as q, useLoginState as r, useLoginActions as s, useMfaState as t, useAuth as u, useMfaActions as v, reloadProfileIfNeeded as w, useProfileState as x, useProfileActions as y, useSignUpState as z };","map":{"version":3,"sources":["/Users/mashapav/Downloads/WEB-CHAT/Client/node_modules/@frontegg/react-hooks/sessionsPolicy-de5104cf.js"],"names":["authStoreName","bindActionCreators","authActions","acceptInvitationActions","acceptInvitationReducers","activateAccountActions","activateAccountReducers","apiTokensActions","apiTokensReducers","forgotPasswordActions","forgotPasswordReducers","resetPhoneNumberActions","resetPhoneNumberReducers","loginActions","loginReducers","mfaActions","mfaReducers","profileActions","profileReducers","signUpActions","signUpReducers","socialLoginsActions","socialLoginsReducer","teamActions","teamReducers","ssoActions","ssoReducers","securityPolicyActions","securityPolicyReducers","tenantsActions","tenantsReducers","rolesActions","rolesReducers","sessionsActions","sessionsReducers","sessionsPolicyActions","sessionsPolicyReducers","createContext","useContext","useMemo","useEffect","shallowEqual","u","useSelector","a","useDispatch","ContextHolder","__rest","ShadowDomContext","useShadowDom","context","urlStrategy","onRedirectTo","path","window","history","pushState","renderByRoute","customLoader","customStyles","contextOptions","rest","Object","assign","isShadowDom","requestCredentials","defaultMapper","state","actions","useAuth","stateMapper","useLoginWithRedirect","dispatch","requestHostedLoginAuthorize","useAuthActions","useOnRedirectTo","_a","useAuthRoutes","routes","useIsAuthenticated","isAuthenticated","useAuthUser","user","useAuthUserOrNull","loginUrl","refresh","sliceReducerActionsBy","reducer","reducerKeys","keys","reducerActions","map","key","reduce","p","n","stateHookGenerator","subState","reducerActionsGenerator","reducers","useAcceptInvitationState","useAcceptInvitationActions","useActivateAccountState","useActivateAccountActions","useApiTokensState","useApiTokensActions","useForgotPasswordState","useForgotPasswordActions","useResetPhoneNumberState","useResetPhoneNumberActions","useLoginState","useLoginActions","useMfaState","useMfaActions","reloadProfileIfNeeded","loading","useProfileState","loadProfile","useProfileActions","useSignUpState","useSignUpActions","useSocialLoginState","useSocialLoginActions","useAuthTeamState","useAuthTeamActions","useSSOState","useSSOActions","useSecurityPolicyState","useSecurityPolicyActions","usePublicPolicySettings","loadOnMount","policy","saving","error","publicPolicy","loadPublicSecurityPolicy","usePublicAuthStrategiesPolicySettings","publicAuthStrategyPolicy","loadPublicAuthStrategiesPolicy","useTenantsState","useTenantsActions","useRolesState","useRolesActions","useSessionsState","useSessionsActions","useSessionsPolicyState","useSessionsPolicyActions","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","b","c","d","e","f","g","h","i","j","k","l","m","o","q","r","s","t","v","w","x","y","z"],"mappings":"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","sourcesContent":["import { authStoreName, bindActionCreators, authActions, acceptInvitationActions, acceptInvitationReducers, activateAccountActions, activateAccountReducers, apiTokensActions, apiTokensReducers, forgotPasswordActions, forgotPasswordReducers, resetPhoneNumberActions, resetPhoneNumberReducers, loginActions, loginReducers, mfaActions, mfaReducers, profileActions, profileReducers, signUpActions, signUpReducers, socialLoginsActions, socialLoginsReducer, teamActions, teamReducers, ssoActions, ssoReducers, securityPolicyActions, securityPolicyReducers, tenantsActions, tenantsReducers, rolesActions, rolesReducers, sessionsActions, sessionsReducers, sessionsPolicyActions, sessionsPolicyReducers } from '@frontegg/redux-store';\nimport { createContext, useContext, useMemo, useEffect } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { u as useSelector, a as useDispatch } from './FronteggStoreContext-d6c3b684.js';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { __rest } from 'tslib';\n\nconst ShadowDomContext = createContext({});\r\nconst useShadowDom = () => {\r\n    const context = useContext(ShadowDomContext);\r\n    const { urlStrategy = 'path', onRedirectTo = urlStrategy === 'path'\r\n        ? (path) => window.history.pushState(null, '', path)\r\n        : (path) => window.history.pushState(null, '', `#${path}`), renderByRoute = false, customLoader = false, customStyles, contextOptions } = context, rest = __rest(context, [\"urlStrategy\", \"onRedirectTo\", \"renderByRoute\", \"customLoader\", \"customStyles\", \"contextOptions\"]);\r\n    return Object.assign({ isShadowDom: true, onRedirectTo,\r\n        renderByRoute,\r\n        customLoader,\r\n        customStyles,\r\n        urlStrategy, contextOptions: Object.assign({ requestCredentials: 'include' }, contextOptions) }, rest);\r\n};\n\nconst defaultMapper = {\r\n    state: (state) => state,\r\n    actions: (actions) => actions,\r\n};\r\nconst useAuth = (stateMapper = defaultMapper.state) => {\r\n    return useSelector((state) => stateMapper(state[authStoreName]), shallowEqual);\r\n};\r\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const { isAuthenticated, user } = useAuth();\r\n *   const loginWithRedirect = useLoginWithRedirect();\r\n *\r\n *   if (!isAuthenticated) {\r\n *     loginWithRedirect();\r\n *     return <></>;\r\n *   }\r\n *\r\n *   return (<div>Hello User {user.name}</div>);\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get if user is \"Authenticated\"\r\n */\r\nconst useLoginWithRedirect = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(authActions.requestHostedLoginAuthorize, dispatch), [authActions.requestHostedLoginAuthorize]);\r\n};\r\nconst useAuthActions = () => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(authActions, dispatch), [authActions]);\r\n};\r\nconst useOnRedirectTo = () => {\r\n    var _a;\r\n    const context = useContext(ShadowDomContext);\r\n    return (_a = context === null || context === void 0 ? void 0 : context.onRedirectTo) !== null && _a !== void 0 ? _a : ContextHolder.onRedirectTo;\r\n};\r\nconst useAuthRoutes = () => useAuth((state) => (Object.assign({}, state.routes)));\r\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const isAuthenticated  = useIsAuthenticated();\r\n *   return isAuthenticated ? <div>Hello User</div> : <Redirect to={'/login'}/>\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get if user is \"Authenticated\"\r\n */\r\nconst useIsAuthenticated = () => useSelector(({ [authStoreName]: { isAuthenticated } }) => isAuthenticated, shallowEqual);\r\n/**\r\n * ```jsx\r\n * export const MyFunctionComponent = () => {\r\n *   const user = useAuthUser();\r\n *   return user ? <div>Hello {user.name}!</div> : <div>Hello Guest!</div>\r\n * }\r\n * ```\r\n *\r\n * use this frontegg hook function to get the authenticated user\r\n * the return user is null if not authenticated\r\n */\r\nconst useAuthUser = () => {\r\n    const routes = useAuthRoutes();\r\n    const onRedirectTo = useOnRedirectTo();\r\n    const user = useAuthUserOrNull();\r\n    if (user == null) {\r\n        onRedirectTo(routes.loginUrl, { refresh: true });\r\n        return {};\r\n    }\r\n    return user;\r\n};\r\nconst useAuthUserOrNull = () => {\r\n    const { user } = useSelector(({ [authStoreName]: { user } }) => ({ user }), shallowEqual);\r\n    return user || null;\r\n};\r\n/**\r\n * hooks helpers\r\n */\r\nconst sliceReducerActionsBy = (reducer) => {\r\n    const reducerKeys = Object.keys(reducer);\r\n    const reducerActions = reducerKeys.map((key) => ({ [key]: authActions[key] }));\r\n    return reducerActions.reduce((p, n) => (Object.assign(Object.assign({}, p), n)), {});\r\n};\r\nconst stateHookGenerator = (stateMapper, subState) => {\r\n    return useSelector((state) => { var _a; return (_a = stateMapper === null || stateMapper === void 0 ? void 0 : stateMapper(state[authStoreName][subState])) !== null && _a !== void 0 ? _a : state[authStoreName][subState]; }, shallowEqual);\r\n};\r\nconst reducerActionsGenerator = (actions, reducers) => {\r\n    const dispatch = useDispatch();\r\n    return useMemo(() => bindActionCreators(Object.assign(Object.assign({}, actions), sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\r\n};\n\nconst useAcceptInvitationState = (stateMapper) => stateHookGenerator(stateMapper, 'acceptInvitationState');\r\nconst useAcceptInvitationActions = () => reducerActionsGenerator(acceptInvitationActions, acceptInvitationReducers);\n\nconst useActivateAccountState = (stateMapper) => stateHookGenerator(stateMapper, 'activateState');\r\nconst useActivateAccountActions = () => reducerActionsGenerator(activateAccountActions, activateAccountReducers);\n\nconst useApiTokensState = (stateMapper) => stateHookGenerator(stateMapper, 'apiTokensState');\r\nconst useApiTokensActions = () => reducerActionsGenerator(apiTokensActions, apiTokensReducers);\n\nconst useForgotPasswordState = (stateMapper) => stateHookGenerator(stateMapper, 'forgotPasswordState');\r\nconst useForgotPasswordActions = () => reducerActionsGenerator(forgotPasswordActions, forgotPasswordReducers);\n\nconst useResetPhoneNumberState = (stateMapper) => stateHookGenerator(stateMapper, 'resetPhoneNumberState');\r\nconst useResetPhoneNumberActions = () => reducerActionsGenerator(resetPhoneNumberActions, resetPhoneNumberReducers);\n\nconst useLoginState = (stateMapper) => stateHookGenerator(stateMapper, 'loginState');\r\nconst useLoginActions = () => reducerActionsGenerator(loginActions, loginReducers);\n\nconst useMfaState = (stateMapper) => stateHookGenerator(stateMapper, 'mfaState');\r\nconst useMfaActions = () => reducerActionsGenerator(mfaActions, mfaReducers);\n\nconst reloadProfileIfNeeded = () => {\r\n    const { loading } = useProfileState();\r\n    const { loadProfile } = useProfileActions();\r\n    useEffect(() => {\r\n        !loading && loadProfile();\r\n    }, []);\r\n};\r\nconst useProfileState = (stateMapper) => stateHookGenerator(stateMapper, 'profileState');\r\nconst useProfileActions = () => reducerActionsGenerator(profileActions, profileReducers);\n\nconst useSignUpState = (stateMapper) => stateHookGenerator(stateMapper, 'signUpState');\r\nconst useSignUpActions = () => reducerActionsGenerator(signUpActions, signUpReducers);\n\nconst useSocialLoginState = (stateMapper) => stateHookGenerator(stateMapper, 'socialLoginState');\r\nconst useSocialLoginActions = () => reducerActionsGenerator(socialLoginsActions, socialLoginsReducer);\n\nconst useAuthTeamState = (stateMapper) => stateHookGenerator(stateMapper, 'teamState');\r\nconst useAuthTeamActions = () => reducerActionsGenerator(teamActions, teamReducers);\n\nconst useSSOState = (stateMapper) => stateHookGenerator(stateMapper, 'ssoState');\r\nconst useSSOActions = () => reducerActionsGenerator(ssoActions, ssoReducers);\n\nconst useSecurityPolicyState = (stateMapper) => stateHookGenerator(stateMapper, 'securityPolicyState');\r\nconst useSecurityPolicyActions = () => reducerActionsGenerator(securityPolicyActions, securityPolicyReducers);\r\nconst usePublicPolicySettings = (loadOnMount = false) => {\r\n    const { loading, policy, saving, error } = useSecurityPolicyState(state => state.publicPolicy);\r\n    const { loadPublicSecurityPolicy } = useSecurityPolicyActions();\r\n    useEffect(() => {\r\n        (loadOnMount || !policy) && loadPublicSecurityPolicy();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loadOnMount, loadPublicSecurityPolicy]);\r\n    return { loading, saving, error, policy };\r\n};\r\nconst usePublicAuthStrategiesPolicySettings = (loadOnMount = false) => {\r\n    const { loading, policy, saving, error } = useSecurityPolicyState(state => state.publicAuthStrategyPolicy);\r\n    const { loadPublicAuthStrategiesPolicy } = useSecurityPolicyActions();\r\n    useEffect(() => {\r\n        (loadOnMount || !policy) && loadPublicAuthStrategiesPolicy();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loadOnMount, loadPublicAuthStrategiesPolicy]);\r\n    return { loading, saving, error, policy };\r\n};\n\nconst useTenantsState = (stateMapper) => stateHookGenerator(stateMapper, 'tenantsState');\r\nconst useTenantsActions = () => reducerActionsGenerator(tenantsActions, tenantsReducers);\n\nconst useRolesState = (stateMapper) => stateHookGenerator(stateMapper, 'rolesState');\r\nconst useRolesActions = () => reducerActionsGenerator(rolesActions, rolesReducers);\n\nconst useSessionsState = (stateMapper) => stateHookGenerator(stateMapper, 'sessionsState');\r\nconst useSessionsActions = () => reducerActionsGenerator(sessionsActions, sessionsReducers);\n\nconst useSessionsPolicyState = (stateMapper) => stateHookGenerator(stateMapper, 'sessionsPolicyState');\r\nconst useSessionsPolicyActions = () => reducerActionsGenerator(sessionsPolicyActions, sessionsPolicyReducers);\n\nexport { useSignUpActions as A, useSocialLoginState as B, useSocialLoginActions as C, useAuthTeamState as D, useAuthTeamActions as E, useSSOState as F, useSSOActions as G, useSecurityPolicyState as H, useSecurityPolicyActions as I, usePublicPolicySettings as J, usePublicAuthStrategiesPolicySettings as K, useTenantsState as L, useTenantsActions as M, useRolesState as N, useRolesActions as O, useSessionsState as P, useSessionsActions as Q, useSessionsPolicyState as R, useSessionsPolicyActions as S, ShadowDomContext as T, useShadowDom as U, useAuthActions as a, useOnRedirectTo as b, useAuthRoutes as c, useIsAuthenticated as d, useAuthUser as e, useAuthUserOrNull as f, useLoginWithRedirect as g, useAcceptInvitationState as h, useAcceptInvitationActions as i, useActivateAccountState as j, useActivateAccountActions as k, useApiTokensState as l, useApiTokensActions as m, useForgotPasswordState as n, useForgotPasswordActions as o, useResetPhoneNumberState as p, useResetPhoneNumberActions as q, useLoginState as r, useLoginActions as s, useMfaState as t, useAuth as u, useMfaActions as v, reloadProfileIfNeeded as w, useProfileState as x, useProfileActions as y, useSignUpState as z };\n"]},"metadata":{},"sourceType":"module"}